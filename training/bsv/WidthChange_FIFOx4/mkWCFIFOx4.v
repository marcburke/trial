//
// Generated by Bluespec Compiler, version 2014.07.A (build 34078, 2014-07-30)
//
// On Tue Nov  3 13:13:02 EST 2015
//
//
// Ports:
// Name                         I/O  size props
// RDY_pio_0_request_put          O     1
// pio_0_response_get             O    64
// RDY_pio_0_response_get         O     1
// RDY_pio_1_request_put          O     1
// pio_1_response_get             O    64
// RDY_pio_1_response_get         O     1
// RDY_pio_2_request_put          O     1
// pio_2_response_get             O    64
// RDY_pio_2_response_get         O     1
// RDY_pio_3_request_put          O     1
// pio_3_response_get             O    64
// RDY_pio_3_response_get         O     1
// CLK                            I     1 clock
// RST_N                          I     1 reset
// pio_0_request_put              I    84
// pio_1_request_put              I    84
// pio_2_request_put              I    84
// pio_3_request_put              I    84
// EN_pio_0_request_put           I     1
// EN_pio_1_request_put           I     1
// EN_pio_2_request_put           I     1
// EN_pio_3_request_put           I     1
// EN_pio_0_response_get          I     1
// EN_pio_1_response_get          I     1
// EN_pio_2_response_get          I     1
// EN_pio_3_response_get          I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkWCFIFOx4(CLK,
		  RST_N,

		  pio_0_request_put,
		  EN_pio_0_request_put,
		  RDY_pio_0_request_put,

		  EN_pio_0_response_get,
		  pio_0_response_get,
		  RDY_pio_0_response_get,

		  pio_1_request_put,
		  EN_pio_1_request_put,
		  RDY_pio_1_request_put,

		  EN_pio_1_response_get,
		  pio_1_response_get,
		  RDY_pio_1_response_get,

		  pio_2_request_put,
		  EN_pio_2_request_put,
		  RDY_pio_2_request_put,

		  EN_pio_2_response_get,
		  pio_2_response_get,
		  RDY_pio_2_response_get,

		  pio_3_request_put,
		  EN_pio_3_request_put,
		  RDY_pio_3_request_put,

		  EN_pio_3_response_get,
		  pio_3_response_get,
		  RDY_pio_3_response_get);
  input  CLK;
  input  RST_N;

  // action method pio_0_request_put
  input  [83 : 0] pio_0_request_put;
  input  EN_pio_0_request_put;
  output RDY_pio_0_request_put;

  // actionvalue method pio_0_response_get
  input  EN_pio_0_response_get;
  output [63 : 0] pio_0_response_get;
  output RDY_pio_0_response_get;

  // action method pio_1_request_put
  input  [83 : 0] pio_1_request_put;
  input  EN_pio_1_request_put;
  output RDY_pio_1_request_put;

  // actionvalue method pio_1_response_get
  input  EN_pio_1_response_get;
  output [63 : 0] pio_1_response_get;
  output RDY_pio_1_response_get;

  // action method pio_2_request_put
  input  [83 : 0] pio_2_request_put;
  input  EN_pio_2_request_put;
  output RDY_pio_2_request_put;

  // actionvalue method pio_2_response_get
  input  EN_pio_2_response_get;
  output [63 : 0] pio_2_response_get;
  output RDY_pio_2_response_get;

  // action method pio_3_request_put
  input  [83 : 0] pio_3_request_put;
  input  EN_pio_3_request_put;
  output RDY_pio_3_request_put;

  // actionvalue method pio_3_response_get
  input  EN_pio_3_response_get;
  output [63 : 0] pio_3_response_get;
  output RDY_pio_3_response_get;

  // signals for module outputs
  wire [63 : 0] pio_0_response_get,
		pio_1_response_get,
		pio_2_response_get,
		pio_3_response_get;
  wire RDY_pio_0_request_put,
       RDY_pio_0_response_get,
       RDY_pio_1_request_put,
       RDY_pio_1_response_get,
       RDY_pio_2_request_put,
       RDY_pio_2_response_get,
       RDY_pio_3_request_put,
       RDY_pio_3_response_get;

  // inlined wires
  wire [1 : 0] pio_brams_0_serverAdapterB_s1_1$wget,
	       pio_brams_1_serverAdapterB_s1_1$wget,
	       pio_brams_2_serverAdapterB_s1_1$wget,
	       pio_brams_3_serverAdapterB_s1_1$wget;
  wire pio_brams_0_serverAdapterA_outData_enqData$whas,
       pio_brams_0_serverAdapterB_cnt_1$whas,
       pio_brams_0_serverAdapterB_outData_enqData$whas,
       pio_brams_0_serverAdapterB_outData_outData$whas,
       pio_brams_1_serverAdapterA_outData_enqData$whas,
       pio_brams_1_serverAdapterB_cnt_1$whas,
       pio_brams_1_serverAdapterB_outData_enqData$whas,
       pio_brams_1_serverAdapterB_outData_outData$whas,
       pio_brams_2_serverAdapterA_outData_enqData$whas,
       pio_brams_2_serverAdapterB_cnt_1$whas,
       pio_brams_2_serverAdapterB_outData_enqData$whas,
       pio_brams_2_serverAdapterB_outData_outData$whas,
       pio_brams_3_serverAdapterA_outData_enqData$whas,
       pio_brams_3_serverAdapterB_cnt_1$whas,
       pio_brams_3_serverAdapterB_outData_enqData$whas,
       pio_brams_3_serverAdapterB_outData_outData$whas;

  // register pio_brams_0_serverAdapterA_cnt
  reg [2 : 0] pio_brams_0_serverAdapterA_cnt;
  wire [2 : 0] pio_brams_0_serverAdapterA_cnt$D_IN;
  wire pio_brams_0_serverAdapterA_cnt$EN;

  // register pio_brams_0_serverAdapterA_s1
  reg [1 : 0] pio_brams_0_serverAdapterA_s1;
  wire [1 : 0] pio_brams_0_serverAdapterA_s1$D_IN;
  wire pio_brams_0_serverAdapterA_s1$EN;

  // register pio_brams_0_serverAdapterB_cnt
  reg [2 : 0] pio_brams_0_serverAdapterB_cnt;
  wire [2 : 0] pio_brams_0_serverAdapterB_cnt$D_IN;
  wire pio_brams_0_serverAdapterB_cnt$EN;

  // register pio_brams_0_serverAdapterB_s1
  reg [1 : 0] pio_brams_0_serverAdapterB_s1;
  wire [1 : 0] pio_brams_0_serverAdapterB_s1$D_IN;
  wire pio_brams_0_serverAdapterB_s1$EN;

  // register pio_brams_1_serverAdapterA_cnt
  reg [2 : 0] pio_brams_1_serverAdapterA_cnt;
  wire [2 : 0] pio_brams_1_serverAdapterA_cnt$D_IN;
  wire pio_brams_1_serverAdapterA_cnt$EN;

  // register pio_brams_1_serverAdapterA_s1
  reg [1 : 0] pio_brams_1_serverAdapterA_s1;
  wire [1 : 0] pio_brams_1_serverAdapterA_s1$D_IN;
  wire pio_brams_1_serverAdapterA_s1$EN;

  // register pio_brams_1_serverAdapterB_cnt
  reg [2 : 0] pio_brams_1_serverAdapterB_cnt;
  wire [2 : 0] pio_brams_1_serverAdapterB_cnt$D_IN;
  wire pio_brams_1_serverAdapterB_cnt$EN;

  // register pio_brams_1_serverAdapterB_s1
  reg [1 : 0] pio_brams_1_serverAdapterB_s1;
  wire [1 : 0] pio_brams_1_serverAdapterB_s1$D_IN;
  wire pio_brams_1_serverAdapterB_s1$EN;

  // register pio_brams_2_serverAdapterA_cnt
  reg [2 : 0] pio_brams_2_serverAdapterA_cnt;
  wire [2 : 0] pio_brams_2_serverAdapterA_cnt$D_IN;
  wire pio_brams_2_serverAdapterA_cnt$EN;

  // register pio_brams_2_serverAdapterA_s1
  reg [1 : 0] pio_brams_2_serverAdapterA_s1;
  wire [1 : 0] pio_brams_2_serverAdapterA_s1$D_IN;
  wire pio_brams_2_serverAdapterA_s1$EN;

  // register pio_brams_2_serverAdapterB_cnt
  reg [2 : 0] pio_brams_2_serverAdapterB_cnt;
  wire [2 : 0] pio_brams_2_serverAdapterB_cnt$D_IN;
  wire pio_brams_2_serverAdapterB_cnt$EN;

  // register pio_brams_2_serverAdapterB_s1
  reg [1 : 0] pio_brams_2_serverAdapterB_s1;
  wire [1 : 0] pio_brams_2_serverAdapterB_s1$D_IN;
  wire pio_brams_2_serverAdapterB_s1$EN;

  // register pio_brams_3_serverAdapterA_cnt
  reg [2 : 0] pio_brams_3_serverAdapterA_cnt;
  wire [2 : 0] pio_brams_3_serverAdapterA_cnt$D_IN;
  wire pio_brams_3_serverAdapterA_cnt$EN;

  // register pio_brams_3_serverAdapterA_s1
  reg [1 : 0] pio_brams_3_serverAdapterA_s1;
  wire [1 : 0] pio_brams_3_serverAdapterA_s1$D_IN;
  wire pio_brams_3_serverAdapterA_s1$EN;

  // register pio_brams_3_serverAdapterB_cnt
  reg [2 : 0] pio_brams_3_serverAdapterB_cnt;
  wire [2 : 0] pio_brams_3_serverAdapterB_cnt$D_IN;
  wire pio_brams_3_serverAdapterB_cnt$EN;

  // register pio_brams_3_serverAdapterB_s1
  reg [1 : 0] pio_brams_3_serverAdapterB_s1;
  wire [1 : 0] pio_brams_3_serverAdapterB_s1$D_IN;
  wire pio_brams_3_serverAdapterB_s1$EN;

  // ports of submodule pio_brams_0_memory
  wire [63 : 0] pio_brams_0_memory$DIA,
		pio_brams_0_memory$DIB,
		pio_brams_0_memory$DOA,
		pio_brams_0_memory$DOB;
  wire [17 : 0] pio_brams_0_memory$ADDRA, pio_brams_0_memory$ADDRB;
  wire pio_brams_0_memory$ENA,
       pio_brams_0_memory$ENB,
       pio_brams_0_memory$WEA,
       pio_brams_0_memory$WEB;

  // ports of submodule pio_brams_0_serverAdapterA_outDataCore
  wire [63 : 0] pio_brams_0_serverAdapterA_outDataCore$D_IN;
  wire pio_brams_0_serverAdapterA_outDataCore$CLR,
       pio_brams_0_serverAdapterA_outDataCore$DEQ,
       pio_brams_0_serverAdapterA_outDataCore$EMPTY_N,
       pio_brams_0_serverAdapterA_outDataCore$ENQ,
       pio_brams_0_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule pio_brams_0_serverAdapterB_outDataCore
  wire [63 : 0] pio_brams_0_serverAdapterB_outDataCore$D_IN,
		pio_brams_0_serverAdapterB_outDataCore$D_OUT;
  wire pio_brams_0_serverAdapterB_outDataCore$CLR,
       pio_brams_0_serverAdapterB_outDataCore$DEQ,
       pio_brams_0_serverAdapterB_outDataCore$EMPTY_N,
       pio_brams_0_serverAdapterB_outDataCore$ENQ,
       pio_brams_0_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule pio_brams_1_memory
  wire [63 : 0] pio_brams_1_memory$DIA,
		pio_brams_1_memory$DIB,
		pio_brams_1_memory$DOA,
		pio_brams_1_memory$DOB;
  wire [17 : 0] pio_brams_1_memory$ADDRA, pio_brams_1_memory$ADDRB;
  wire pio_brams_1_memory$ENA,
       pio_brams_1_memory$ENB,
       pio_brams_1_memory$WEA,
       pio_brams_1_memory$WEB;

  // ports of submodule pio_brams_1_serverAdapterA_outDataCore
  wire [63 : 0] pio_brams_1_serverAdapterA_outDataCore$D_IN;
  wire pio_brams_1_serverAdapterA_outDataCore$CLR,
       pio_brams_1_serverAdapterA_outDataCore$DEQ,
       pio_brams_1_serverAdapterA_outDataCore$EMPTY_N,
       pio_brams_1_serverAdapterA_outDataCore$ENQ,
       pio_brams_1_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule pio_brams_1_serverAdapterB_outDataCore
  wire [63 : 0] pio_brams_1_serverAdapterB_outDataCore$D_IN,
		pio_brams_1_serverAdapterB_outDataCore$D_OUT;
  wire pio_brams_1_serverAdapterB_outDataCore$CLR,
       pio_brams_1_serverAdapterB_outDataCore$DEQ,
       pio_brams_1_serverAdapterB_outDataCore$EMPTY_N,
       pio_brams_1_serverAdapterB_outDataCore$ENQ,
       pio_brams_1_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule pio_brams_2_memory
  wire [63 : 0] pio_brams_2_memory$DIA,
		pio_brams_2_memory$DIB,
		pio_brams_2_memory$DOA,
		pio_brams_2_memory$DOB;
  wire [17 : 0] pio_brams_2_memory$ADDRA, pio_brams_2_memory$ADDRB;
  wire pio_brams_2_memory$ENA,
       pio_brams_2_memory$ENB,
       pio_brams_2_memory$WEA,
       pio_brams_2_memory$WEB;

  // ports of submodule pio_brams_2_serverAdapterA_outDataCore
  wire [63 : 0] pio_brams_2_serverAdapterA_outDataCore$D_IN;
  wire pio_brams_2_serverAdapterA_outDataCore$CLR,
       pio_brams_2_serverAdapterA_outDataCore$DEQ,
       pio_brams_2_serverAdapterA_outDataCore$EMPTY_N,
       pio_brams_2_serverAdapterA_outDataCore$ENQ,
       pio_brams_2_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule pio_brams_2_serverAdapterB_outDataCore
  wire [63 : 0] pio_brams_2_serverAdapterB_outDataCore$D_IN,
		pio_brams_2_serverAdapterB_outDataCore$D_OUT;
  wire pio_brams_2_serverAdapterB_outDataCore$CLR,
       pio_brams_2_serverAdapterB_outDataCore$DEQ,
       pio_brams_2_serverAdapterB_outDataCore$EMPTY_N,
       pio_brams_2_serverAdapterB_outDataCore$ENQ,
       pio_brams_2_serverAdapterB_outDataCore$FULL_N;

  // ports of submodule pio_brams_3_memory
  wire [63 : 0] pio_brams_3_memory$DIA,
		pio_brams_3_memory$DIB,
		pio_brams_3_memory$DOA,
		pio_brams_3_memory$DOB;
  wire [17 : 0] pio_brams_3_memory$ADDRA, pio_brams_3_memory$ADDRB;
  wire pio_brams_3_memory$ENA,
       pio_brams_3_memory$ENB,
       pio_brams_3_memory$WEA,
       pio_brams_3_memory$WEB;

  // ports of submodule pio_brams_3_serverAdapterA_outDataCore
  wire [63 : 0] pio_brams_3_serverAdapterA_outDataCore$D_IN;
  wire pio_brams_3_serverAdapterA_outDataCore$CLR,
       pio_brams_3_serverAdapterA_outDataCore$DEQ,
       pio_brams_3_serverAdapterA_outDataCore$EMPTY_N,
       pio_brams_3_serverAdapterA_outDataCore$ENQ,
       pio_brams_3_serverAdapterA_outDataCore$FULL_N;

  // ports of submodule pio_brams_3_serverAdapterB_outDataCore
  wire [63 : 0] pio_brams_3_serverAdapterB_outDataCore$D_IN,
		pio_brams_3_serverAdapterB_outDataCore$D_OUT;
  wire pio_brams_3_serverAdapterB_outDataCore$CLR,
       pio_brams_3_serverAdapterB_outDataCore$DEQ,
       pio_brams_3_serverAdapterB_outDataCore$EMPTY_N,
       pio_brams_3_serverAdapterB_outDataCore$ENQ,
       pio_brams_3_serverAdapterB_outDataCore$FULL_N;

  // rule scheduling signals
  wire CAN_FIRE_RL_pio_brams_0_serverAdapterA_cnt_finalAdd,
       CAN_FIRE_RL_pio_brams_0_serverAdapterA_moveToOutFIFO,
       CAN_FIRE_RL_pio_brams_0_serverAdapterA_outData_deqOnly,
       CAN_FIRE_RL_pio_brams_0_serverAdapterA_outData_enqAndDeq,
       CAN_FIRE_RL_pio_brams_0_serverAdapterA_outData_enqOnly,
       CAN_FIRE_RL_pio_brams_0_serverAdapterA_outData_setFirstCore,
       CAN_FIRE_RL_pio_brams_0_serverAdapterA_outData_setFirstEnq,
       CAN_FIRE_RL_pio_brams_0_serverAdapterA_overRun,
       CAN_FIRE_RL_pio_brams_0_serverAdapterA_s1__dreg_update,
       CAN_FIRE_RL_pio_brams_0_serverAdapterA_stageReadResponseAlways,
       CAN_FIRE_RL_pio_brams_0_serverAdapterB_cnt_finalAdd,
       CAN_FIRE_RL_pio_brams_0_serverAdapterB_moveToOutFIFO,
       CAN_FIRE_RL_pio_brams_0_serverAdapterB_outData_deqOnly,
       CAN_FIRE_RL_pio_brams_0_serverAdapterB_outData_enqAndDeq,
       CAN_FIRE_RL_pio_brams_0_serverAdapterB_outData_enqOnly,
       CAN_FIRE_RL_pio_brams_0_serverAdapterB_outData_setFirstCore,
       CAN_FIRE_RL_pio_brams_0_serverAdapterB_outData_setFirstEnq,
       CAN_FIRE_RL_pio_brams_0_serverAdapterB_overRun,
       CAN_FIRE_RL_pio_brams_0_serverAdapterB_s1__dreg_update,
       CAN_FIRE_RL_pio_brams_0_serverAdapterB_stageReadResponseAlways,
       CAN_FIRE_RL_pio_brams_1_serverAdapterA_cnt_finalAdd,
       CAN_FIRE_RL_pio_brams_1_serverAdapterA_moveToOutFIFO,
       CAN_FIRE_RL_pio_brams_1_serverAdapterA_outData_deqOnly,
       CAN_FIRE_RL_pio_brams_1_serverAdapterA_outData_enqAndDeq,
       CAN_FIRE_RL_pio_brams_1_serverAdapterA_outData_enqOnly,
       CAN_FIRE_RL_pio_brams_1_serverAdapterA_outData_setFirstCore,
       CAN_FIRE_RL_pio_brams_1_serverAdapterA_outData_setFirstEnq,
       CAN_FIRE_RL_pio_brams_1_serverAdapterA_overRun,
       CAN_FIRE_RL_pio_brams_1_serverAdapterA_s1__dreg_update,
       CAN_FIRE_RL_pio_brams_1_serverAdapterA_stageReadResponseAlways,
       CAN_FIRE_RL_pio_brams_1_serverAdapterB_cnt_finalAdd,
       CAN_FIRE_RL_pio_brams_1_serverAdapterB_moveToOutFIFO,
       CAN_FIRE_RL_pio_brams_1_serverAdapterB_outData_deqOnly,
       CAN_FIRE_RL_pio_brams_1_serverAdapterB_outData_enqAndDeq,
       CAN_FIRE_RL_pio_brams_1_serverAdapterB_outData_enqOnly,
       CAN_FIRE_RL_pio_brams_1_serverAdapterB_outData_setFirstCore,
       CAN_FIRE_RL_pio_brams_1_serverAdapterB_outData_setFirstEnq,
       CAN_FIRE_RL_pio_brams_1_serverAdapterB_overRun,
       CAN_FIRE_RL_pio_brams_1_serverAdapterB_s1__dreg_update,
       CAN_FIRE_RL_pio_brams_1_serverAdapterB_stageReadResponseAlways,
       CAN_FIRE_RL_pio_brams_2_serverAdapterA_cnt_finalAdd,
       CAN_FIRE_RL_pio_brams_2_serverAdapterA_moveToOutFIFO,
       CAN_FIRE_RL_pio_brams_2_serverAdapterA_outData_deqOnly,
       CAN_FIRE_RL_pio_brams_2_serverAdapterA_outData_enqAndDeq,
       CAN_FIRE_RL_pio_brams_2_serverAdapterA_outData_enqOnly,
       CAN_FIRE_RL_pio_brams_2_serverAdapterA_outData_setFirstCore,
       CAN_FIRE_RL_pio_brams_2_serverAdapterA_outData_setFirstEnq,
       CAN_FIRE_RL_pio_brams_2_serverAdapterA_overRun,
       CAN_FIRE_RL_pio_brams_2_serverAdapterA_s1__dreg_update,
       CAN_FIRE_RL_pio_brams_2_serverAdapterA_stageReadResponseAlways,
       CAN_FIRE_RL_pio_brams_2_serverAdapterB_cnt_finalAdd,
       CAN_FIRE_RL_pio_brams_2_serverAdapterB_moveToOutFIFO,
       CAN_FIRE_RL_pio_brams_2_serverAdapterB_outData_deqOnly,
       CAN_FIRE_RL_pio_brams_2_serverAdapterB_outData_enqAndDeq,
       CAN_FIRE_RL_pio_brams_2_serverAdapterB_outData_enqOnly,
       CAN_FIRE_RL_pio_brams_2_serverAdapterB_outData_setFirstCore,
       CAN_FIRE_RL_pio_brams_2_serverAdapterB_outData_setFirstEnq,
       CAN_FIRE_RL_pio_brams_2_serverAdapterB_overRun,
       CAN_FIRE_RL_pio_brams_2_serverAdapterB_s1__dreg_update,
       CAN_FIRE_RL_pio_brams_2_serverAdapterB_stageReadResponseAlways,
       CAN_FIRE_RL_pio_brams_3_serverAdapterA_cnt_finalAdd,
       CAN_FIRE_RL_pio_brams_3_serverAdapterA_moveToOutFIFO,
       CAN_FIRE_RL_pio_brams_3_serverAdapterA_outData_deqOnly,
       CAN_FIRE_RL_pio_brams_3_serverAdapterA_outData_enqAndDeq,
       CAN_FIRE_RL_pio_brams_3_serverAdapterA_outData_enqOnly,
       CAN_FIRE_RL_pio_brams_3_serverAdapterA_outData_setFirstCore,
       CAN_FIRE_RL_pio_brams_3_serverAdapterA_outData_setFirstEnq,
       CAN_FIRE_RL_pio_brams_3_serverAdapterA_overRun,
       CAN_FIRE_RL_pio_brams_3_serverAdapterA_s1__dreg_update,
       CAN_FIRE_RL_pio_brams_3_serverAdapterA_stageReadResponseAlways,
       CAN_FIRE_RL_pio_brams_3_serverAdapterB_cnt_finalAdd,
       CAN_FIRE_RL_pio_brams_3_serverAdapterB_moveToOutFIFO,
       CAN_FIRE_RL_pio_brams_3_serverAdapterB_outData_deqOnly,
       CAN_FIRE_RL_pio_brams_3_serverAdapterB_outData_enqAndDeq,
       CAN_FIRE_RL_pio_brams_3_serverAdapterB_outData_enqOnly,
       CAN_FIRE_RL_pio_brams_3_serverAdapterB_outData_setFirstCore,
       CAN_FIRE_RL_pio_brams_3_serverAdapterB_outData_setFirstEnq,
       CAN_FIRE_RL_pio_brams_3_serverAdapterB_overRun,
       CAN_FIRE_RL_pio_brams_3_serverAdapterB_s1__dreg_update,
       CAN_FIRE_RL_pio_brams_3_serverAdapterB_stageReadResponseAlways,
       CAN_FIRE_pio_0_request_put,
       CAN_FIRE_pio_0_response_get,
       CAN_FIRE_pio_1_request_put,
       CAN_FIRE_pio_1_response_get,
       CAN_FIRE_pio_2_request_put,
       CAN_FIRE_pio_2_response_get,
       CAN_FIRE_pio_3_request_put,
       CAN_FIRE_pio_3_response_get,
       WILL_FIRE_RL_pio_brams_0_serverAdapterA_cnt_finalAdd,
       WILL_FIRE_RL_pio_brams_0_serverAdapterA_moveToOutFIFO,
       WILL_FIRE_RL_pio_brams_0_serverAdapterA_outData_deqOnly,
       WILL_FIRE_RL_pio_brams_0_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_pio_brams_0_serverAdapterA_outData_enqOnly,
       WILL_FIRE_RL_pio_brams_0_serverAdapterA_outData_setFirstCore,
       WILL_FIRE_RL_pio_brams_0_serverAdapterA_outData_setFirstEnq,
       WILL_FIRE_RL_pio_brams_0_serverAdapterA_overRun,
       WILL_FIRE_RL_pio_brams_0_serverAdapterA_s1__dreg_update,
       WILL_FIRE_RL_pio_brams_0_serverAdapterA_stageReadResponseAlways,
       WILL_FIRE_RL_pio_brams_0_serverAdapterB_cnt_finalAdd,
       WILL_FIRE_RL_pio_brams_0_serverAdapterB_moveToOutFIFO,
       WILL_FIRE_RL_pio_brams_0_serverAdapterB_outData_deqOnly,
       WILL_FIRE_RL_pio_brams_0_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_pio_brams_0_serverAdapterB_outData_enqOnly,
       WILL_FIRE_RL_pio_brams_0_serverAdapterB_outData_setFirstCore,
       WILL_FIRE_RL_pio_brams_0_serverAdapterB_outData_setFirstEnq,
       WILL_FIRE_RL_pio_brams_0_serverAdapterB_overRun,
       WILL_FIRE_RL_pio_brams_0_serverAdapterB_s1__dreg_update,
       WILL_FIRE_RL_pio_brams_0_serverAdapterB_stageReadResponseAlways,
       WILL_FIRE_RL_pio_brams_1_serverAdapterA_cnt_finalAdd,
       WILL_FIRE_RL_pio_brams_1_serverAdapterA_moveToOutFIFO,
       WILL_FIRE_RL_pio_brams_1_serverAdapterA_outData_deqOnly,
       WILL_FIRE_RL_pio_brams_1_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_pio_brams_1_serverAdapterA_outData_enqOnly,
       WILL_FIRE_RL_pio_brams_1_serverAdapterA_outData_setFirstCore,
       WILL_FIRE_RL_pio_brams_1_serverAdapterA_outData_setFirstEnq,
       WILL_FIRE_RL_pio_brams_1_serverAdapterA_overRun,
       WILL_FIRE_RL_pio_brams_1_serverAdapterA_s1__dreg_update,
       WILL_FIRE_RL_pio_brams_1_serverAdapterA_stageReadResponseAlways,
       WILL_FIRE_RL_pio_brams_1_serverAdapterB_cnt_finalAdd,
       WILL_FIRE_RL_pio_brams_1_serverAdapterB_moveToOutFIFO,
       WILL_FIRE_RL_pio_brams_1_serverAdapterB_outData_deqOnly,
       WILL_FIRE_RL_pio_brams_1_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_pio_brams_1_serverAdapterB_outData_enqOnly,
       WILL_FIRE_RL_pio_brams_1_serverAdapterB_outData_setFirstCore,
       WILL_FIRE_RL_pio_brams_1_serverAdapterB_outData_setFirstEnq,
       WILL_FIRE_RL_pio_brams_1_serverAdapterB_overRun,
       WILL_FIRE_RL_pio_brams_1_serverAdapterB_s1__dreg_update,
       WILL_FIRE_RL_pio_brams_1_serverAdapterB_stageReadResponseAlways,
       WILL_FIRE_RL_pio_brams_2_serverAdapterA_cnt_finalAdd,
       WILL_FIRE_RL_pio_brams_2_serverAdapterA_moveToOutFIFO,
       WILL_FIRE_RL_pio_brams_2_serverAdapterA_outData_deqOnly,
       WILL_FIRE_RL_pio_brams_2_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_pio_brams_2_serverAdapterA_outData_enqOnly,
       WILL_FIRE_RL_pio_brams_2_serverAdapterA_outData_setFirstCore,
       WILL_FIRE_RL_pio_brams_2_serverAdapterA_outData_setFirstEnq,
       WILL_FIRE_RL_pio_brams_2_serverAdapterA_overRun,
       WILL_FIRE_RL_pio_brams_2_serverAdapterA_s1__dreg_update,
       WILL_FIRE_RL_pio_brams_2_serverAdapterA_stageReadResponseAlways,
       WILL_FIRE_RL_pio_brams_2_serverAdapterB_cnt_finalAdd,
       WILL_FIRE_RL_pio_brams_2_serverAdapterB_moveToOutFIFO,
       WILL_FIRE_RL_pio_brams_2_serverAdapterB_outData_deqOnly,
       WILL_FIRE_RL_pio_brams_2_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_pio_brams_2_serverAdapterB_outData_enqOnly,
       WILL_FIRE_RL_pio_brams_2_serverAdapterB_outData_setFirstCore,
       WILL_FIRE_RL_pio_brams_2_serverAdapterB_outData_setFirstEnq,
       WILL_FIRE_RL_pio_brams_2_serverAdapterB_overRun,
       WILL_FIRE_RL_pio_brams_2_serverAdapterB_s1__dreg_update,
       WILL_FIRE_RL_pio_brams_2_serverAdapterB_stageReadResponseAlways,
       WILL_FIRE_RL_pio_brams_3_serverAdapterA_cnt_finalAdd,
       WILL_FIRE_RL_pio_brams_3_serverAdapterA_moveToOutFIFO,
       WILL_FIRE_RL_pio_brams_3_serverAdapterA_outData_deqOnly,
       WILL_FIRE_RL_pio_brams_3_serverAdapterA_outData_enqAndDeq,
       WILL_FIRE_RL_pio_brams_3_serverAdapterA_outData_enqOnly,
       WILL_FIRE_RL_pio_brams_3_serverAdapterA_outData_setFirstCore,
       WILL_FIRE_RL_pio_brams_3_serverAdapterA_outData_setFirstEnq,
       WILL_FIRE_RL_pio_brams_3_serverAdapterA_overRun,
       WILL_FIRE_RL_pio_brams_3_serverAdapterA_s1__dreg_update,
       WILL_FIRE_RL_pio_brams_3_serverAdapterA_stageReadResponseAlways,
       WILL_FIRE_RL_pio_brams_3_serverAdapterB_cnt_finalAdd,
       WILL_FIRE_RL_pio_brams_3_serverAdapterB_moveToOutFIFO,
       WILL_FIRE_RL_pio_brams_3_serverAdapterB_outData_deqOnly,
       WILL_FIRE_RL_pio_brams_3_serverAdapterB_outData_enqAndDeq,
       WILL_FIRE_RL_pio_brams_3_serverAdapterB_outData_enqOnly,
       WILL_FIRE_RL_pio_brams_3_serverAdapterB_outData_setFirstCore,
       WILL_FIRE_RL_pio_brams_3_serverAdapterB_outData_setFirstEnq,
       WILL_FIRE_RL_pio_brams_3_serverAdapterB_overRun,
       WILL_FIRE_RL_pio_brams_3_serverAdapterB_s1__dreg_update,
       WILL_FIRE_RL_pio_brams_3_serverAdapterB_stageReadResponseAlways,
       WILL_FIRE_pio_0_request_put,
       WILL_FIRE_pio_0_response_get,
       WILL_FIRE_pio_1_request_put,
       WILL_FIRE_pio_1_response_get,
       WILL_FIRE_pio_2_request_put,
       WILL_FIRE_pio_2_response_get,
       WILL_FIRE_pio_3_request_put,
       WILL_FIRE_pio_3_response_get;

  // remaining internal signals
  wire [2 : 0] pio_brams_0_serverAdapterB_cnt_3_PLUS_IF_pio_b_ETC___d89,
	       pio_brams_1_serverAdapterB_cnt_97_PLUS_IF_pio__ETC___d203,
	       pio_brams_2_serverAdapterB_cnt_11_PLUS_IF_pio__ETC___d317,
	       pio_brams_3_serverAdapterB_cnt_25_PLUS_IF_pio__ETC___d431;
  wire [1 : 0] ab__h11841, ab__h2997, ab__h5945, ab__h8893;

  // action method pio_0_request_put
  assign RDY_pio_0_request_put =
	     (pio_brams_0_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;
  assign CAN_FIRE_pio_0_request_put =
	     (pio_brams_0_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;
  assign WILL_FIRE_pio_0_request_put = EN_pio_0_request_put ;

  // actionvalue method pio_0_response_get
  assign pio_0_response_get =
	     WILL_FIRE_RL_pio_brams_0_serverAdapterB_outData_setFirstEnq ?
	       pio_brams_0_memory$DOB :
	       pio_brams_0_serverAdapterB_outDataCore$D_OUT ;
  assign RDY_pio_0_response_get =
	     (pio_brams_0_serverAdapterB_outDataCore$EMPTY_N ||
	      pio_brams_0_serverAdapterB_outData_enqData$whas) &&
	     pio_brams_0_serverAdapterB_outData_outData$whas ;
  assign CAN_FIRE_pio_0_response_get =
	     (pio_brams_0_serverAdapterB_outDataCore$EMPTY_N ||
	      pio_brams_0_serverAdapterB_outData_enqData$whas) &&
	     pio_brams_0_serverAdapterB_outData_outData$whas ;
  assign WILL_FIRE_pio_0_response_get = EN_pio_0_response_get ;

  // action method pio_1_request_put
  assign RDY_pio_1_request_put =
	     (pio_brams_1_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;
  assign CAN_FIRE_pio_1_request_put =
	     (pio_brams_1_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;
  assign WILL_FIRE_pio_1_request_put = EN_pio_1_request_put ;

  // actionvalue method pio_1_response_get
  assign pio_1_response_get =
	     WILL_FIRE_RL_pio_brams_1_serverAdapterB_outData_setFirstEnq ?
	       pio_brams_1_memory$DOB :
	       pio_brams_1_serverAdapterB_outDataCore$D_OUT ;
  assign RDY_pio_1_response_get =
	     (pio_brams_1_serverAdapterB_outDataCore$EMPTY_N ||
	      pio_brams_1_serverAdapterB_outData_enqData$whas) &&
	     pio_brams_1_serverAdapterB_outData_outData$whas ;
  assign CAN_FIRE_pio_1_response_get =
	     (pio_brams_1_serverAdapterB_outDataCore$EMPTY_N ||
	      pio_brams_1_serverAdapterB_outData_enqData$whas) &&
	     pio_brams_1_serverAdapterB_outData_outData$whas ;
  assign WILL_FIRE_pio_1_response_get = EN_pio_1_response_get ;

  // action method pio_2_request_put
  assign RDY_pio_2_request_put =
	     (pio_brams_2_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;
  assign CAN_FIRE_pio_2_request_put =
	     (pio_brams_2_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;
  assign WILL_FIRE_pio_2_request_put = EN_pio_2_request_put ;

  // actionvalue method pio_2_response_get
  assign pio_2_response_get =
	     WILL_FIRE_RL_pio_brams_2_serverAdapterB_outData_setFirstEnq ?
	       pio_brams_2_memory$DOB :
	       pio_brams_2_serverAdapterB_outDataCore$D_OUT ;
  assign RDY_pio_2_response_get =
	     (pio_brams_2_serverAdapterB_outDataCore$EMPTY_N ||
	      pio_brams_2_serverAdapterB_outData_enqData$whas) &&
	     pio_brams_2_serverAdapterB_outData_outData$whas ;
  assign CAN_FIRE_pio_2_response_get =
	     (pio_brams_2_serverAdapterB_outDataCore$EMPTY_N ||
	      pio_brams_2_serverAdapterB_outData_enqData$whas) &&
	     pio_brams_2_serverAdapterB_outData_outData$whas ;
  assign WILL_FIRE_pio_2_response_get = EN_pio_2_response_get ;

  // action method pio_3_request_put
  assign RDY_pio_3_request_put =
	     (pio_brams_3_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;
  assign CAN_FIRE_pio_3_request_put =
	     (pio_brams_3_serverAdapterB_cnt ^ 3'h4) < 3'd7 ;
  assign WILL_FIRE_pio_3_request_put = EN_pio_3_request_put ;

  // actionvalue method pio_3_response_get
  assign pio_3_response_get =
	     WILL_FIRE_RL_pio_brams_3_serverAdapterB_outData_setFirstEnq ?
	       pio_brams_3_memory$DOB :
	       pio_brams_3_serverAdapterB_outDataCore$D_OUT ;
  assign RDY_pio_3_response_get =
	     (pio_brams_3_serverAdapterB_outDataCore$EMPTY_N ||
	      pio_brams_3_serverAdapterB_outData_enqData$whas) &&
	     pio_brams_3_serverAdapterB_outData_outData$whas ;
  assign CAN_FIRE_pio_3_response_get =
	     (pio_brams_3_serverAdapterB_outDataCore$EMPTY_N ||
	      pio_brams_3_serverAdapterB_outData_enqData$whas) &&
	     pio_brams_3_serverAdapterB_outData_outData$whas ;
  assign WILL_FIRE_pio_3_response_get = EN_pio_3_response_get ;

  // submodule pio_brams_0_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd18),
	  .DATA_WIDTH(32'd64),
	  .MEMSIZE(19'd8192)) pio_brams_0_memory(.CLKA(CLK),
						 .CLKB(CLK),
						 .ADDRA(pio_brams_0_memory$ADDRA),
						 .ADDRB(pio_brams_0_memory$ADDRB),
						 .DIA(pio_brams_0_memory$DIA),
						 .DIB(pio_brams_0_memory$DIB),
						 .WEA(pio_brams_0_memory$WEA),
						 .WEB(pio_brams_0_memory$WEB),
						 .ENA(pio_brams_0_memory$ENA),
						 .ENB(pio_brams_0_memory$ENB),
						 .DOA(pio_brams_0_memory$DOA),
						 .DOB(pio_brams_0_memory$DOB));

  // submodule pio_brams_0_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd64),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(32'd1)) pio_brams_0_serverAdapterA_outDataCore(.RST(RST_N),
								      .CLK(CLK),
								      .D_IN(pio_brams_0_serverAdapterA_outDataCore$D_IN),
								      .ENQ(pio_brams_0_serverAdapterA_outDataCore$ENQ),
								      .DEQ(pio_brams_0_serverAdapterA_outDataCore$DEQ),
								      .CLR(pio_brams_0_serverAdapterA_outDataCore$CLR),
								      .D_OUT(),
								      .FULL_N(pio_brams_0_serverAdapterA_outDataCore$FULL_N),
								      .EMPTY_N(pio_brams_0_serverAdapterA_outDataCore$EMPTY_N));

  // submodule pio_brams_0_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd64),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(32'd1)) pio_brams_0_serverAdapterB_outDataCore(.RST(RST_N),
								      .CLK(CLK),
								      .D_IN(pio_brams_0_serverAdapterB_outDataCore$D_IN),
								      .ENQ(pio_brams_0_serverAdapterB_outDataCore$ENQ),
								      .DEQ(pio_brams_0_serverAdapterB_outDataCore$DEQ),
								      .CLR(pio_brams_0_serverAdapterB_outDataCore$CLR),
								      .D_OUT(pio_brams_0_serverAdapterB_outDataCore$D_OUT),
								      .FULL_N(pio_brams_0_serverAdapterB_outDataCore$FULL_N),
								      .EMPTY_N(pio_brams_0_serverAdapterB_outDataCore$EMPTY_N));

  // submodule pio_brams_1_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd18),
	  .DATA_WIDTH(32'd64),
	  .MEMSIZE(19'd8192)) pio_brams_1_memory(.CLKA(CLK),
						 .CLKB(CLK),
						 .ADDRA(pio_brams_1_memory$ADDRA),
						 .ADDRB(pio_brams_1_memory$ADDRB),
						 .DIA(pio_brams_1_memory$DIA),
						 .DIB(pio_brams_1_memory$DIB),
						 .WEA(pio_brams_1_memory$WEA),
						 .WEB(pio_brams_1_memory$WEB),
						 .ENA(pio_brams_1_memory$ENA),
						 .ENB(pio_brams_1_memory$ENB),
						 .DOA(pio_brams_1_memory$DOA),
						 .DOB(pio_brams_1_memory$DOB));

  // submodule pio_brams_1_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd64),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(32'd1)) pio_brams_1_serverAdapterA_outDataCore(.RST(RST_N),
								      .CLK(CLK),
								      .D_IN(pio_brams_1_serverAdapterA_outDataCore$D_IN),
								      .ENQ(pio_brams_1_serverAdapterA_outDataCore$ENQ),
								      .DEQ(pio_brams_1_serverAdapterA_outDataCore$DEQ),
								      .CLR(pio_brams_1_serverAdapterA_outDataCore$CLR),
								      .D_OUT(),
								      .FULL_N(pio_brams_1_serverAdapterA_outDataCore$FULL_N),
								      .EMPTY_N(pio_brams_1_serverAdapterA_outDataCore$EMPTY_N));

  // submodule pio_brams_1_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd64),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(32'd1)) pio_brams_1_serverAdapterB_outDataCore(.RST(RST_N),
								      .CLK(CLK),
								      .D_IN(pio_brams_1_serverAdapterB_outDataCore$D_IN),
								      .ENQ(pio_brams_1_serverAdapterB_outDataCore$ENQ),
								      .DEQ(pio_brams_1_serverAdapterB_outDataCore$DEQ),
								      .CLR(pio_brams_1_serverAdapterB_outDataCore$CLR),
								      .D_OUT(pio_brams_1_serverAdapterB_outDataCore$D_OUT),
								      .FULL_N(pio_brams_1_serverAdapterB_outDataCore$FULL_N),
								      .EMPTY_N(pio_brams_1_serverAdapterB_outDataCore$EMPTY_N));

  // submodule pio_brams_2_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd18),
	  .DATA_WIDTH(32'd64),
	  .MEMSIZE(19'd8192)) pio_brams_2_memory(.CLKA(CLK),
						 .CLKB(CLK),
						 .ADDRA(pio_brams_2_memory$ADDRA),
						 .ADDRB(pio_brams_2_memory$ADDRB),
						 .DIA(pio_brams_2_memory$DIA),
						 .DIB(pio_brams_2_memory$DIB),
						 .WEA(pio_brams_2_memory$WEA),
						 .WEB(pio_brams_2_memory$WEB),
						 .ENA(pio_brams_2_memory$ENA),
						 .ENB(pio_brams_2_memory$ENB),
						 .DOA(pio_brams_2_memory$DOA),
						 .DOB(pio_brams_2_memory$DOB));

  // submodule pio_brams_2_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd64),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(32'd1)) pio_brams_2_serverAdapterA_outDataCore(.RST(RST_N),
								      .CLK(CLK),
								      .D_IN(pio_brams_2_serverAdapterA_outDataCore$D_IN),
								      .ENQ(pio_brams_2_serverAdapterA_outDataCore$ENQ),
								      .DEQ(pio_brams_2_serverAdapterA_outDataCore$DEQ),
								      .CLR(pio_brams_2_serverAdapterA_outDataCore$CLR),
								      .D_OUT(),
								      .FULL_N(pio_brams_2_serverAdapterA_outDataCore$FULL_N),
								      .EMPTY_N(pio_brams_2_serverAdapterA_outDataCore$EMPTY_N));

  // submodule pio_brams_2_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd64),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(32'd1)) pio_brams_2_serverAdapterB_outDataCore(.RST(RST_N),
								      .CLK(CLK),
								      .D_IN(pio_brams_2_serverAdapterB_outDataCore$D_IN),
								      .ENQ(pio_brams_2_serverAdapterB_outDataCore$ENQ),
								      .DEQ(pio_brams_2_serverAdapterB_outDataCore$DEQ),
								      .CLR(pio_brams_2_serverAdapterB_outDataCore$CLR),
								      .D_OUT(pio_brams_2_serverAdapterB_outDataCore$D_OUT),
								      .FULL_N(pio_brams_2_serverAdapterB_outDataCore$FULL_N),
								      .EMPTY_N(pio_brams_2_serverAdapterB_outDataCore$EMPTY_N));

  // submodule pio_brams_3_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd18),
	  .DATA_WIDTH(32'd64),
	  .MEMSIZE(19'd8192)) pio_brams_3_memory(.CLKA(CLK),
						 .CLKB(CLK),
						 .ADDRA(pio_brams_3_memory$ADDRA),
						 .ADDRB(pio_brams_3_memory$ADDRB),
						 .DIA(pio_brams_3_memory$DIA),
						 .DIB(pio_brams_3_memory$DIB),
						 .WEA(pio_brams_3_memory$WEA),
						 .WEB(pio_brams_3_memory$WEB),
						 .ENA(pio_brams_3_memory$ENA),
						 .ENB(pio_brams_3_memory$ENB),
						 .DOA(pio_brams_3_memory$DOA),
						 .DOB(pio_brams_3_memory$DOB));

  // submodule pio_brams_3_serverAdapterA_outDataCore
  SizedFIFO #(.p1width(32'd64),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(32'd1)) pio_brams_3_serverAdapterA_outDataCore(.RST(RST_N),
								      .CLK(CLK),
								      .D_IN(pio_brams_3_serverAdapterA_outDataCore$D_IN),
								      .ENQ(pio_brams_3_serverAdapterA_outDataCore$ENQ),
								      .DEQ(pio_brams_3_serverAdapterA_outDataCore$DEQ),
								      .CLR(pio_brams_3_serverAdapterA_outDataCore$CLR),
								      .D_OUT(),
								      .FULL_N(pio_brams_3_serverAdapterA_outDataCore$FULL_N),
								      .EMPTY_N(pio_brams_3_serverAdapterA_outDataCore$EMPTY_N));

  // submodule pio_brams_3_serverAdapterB_outDataCore
  SizedFIFO #(.p1width(32'd64),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(32'd1)) pio_brams_3_serverAdapterB_outDataCore(.RST(RST_N),
								      .CLK(CLK),
								      .D_IN(pio_brams_3_serverAdapterB_outDataCore$D_IN),
								      .ENQ(pio_brams_3_serverAdapterB_outDataCore$ENQ),
								      .DEQ(pio_brams_3_serverAdapterB_outDataCore$DEQ),
								      .CLR(pio_brams_3_serverAdapterB_outDataCore$CLR),
								      .D_OUT(pio_brams_3_serverAdapterB_outDataCore$D_OUT),
								      .FULL_N(pio_brams_3_serverAdapterB_outDataCore$FULL_N),
								      .EMPTY_N(pio_brams_3_serverAdapterB_outDataCore$EMPTY_N));

  // rule RL_pio_brams_0_serverAdapterA_stageReadResponseAlways
  assign CAN_FIRE_RL_pio_brams_0_serverAdapterA_stageReadResponseAlways =
	     1'b0 ;
  assign WILL_FIRE_RL_pio_brams_0_serverAdapterA_stageReadResponseAlways =
	     1'b0 ;

  // rule RL_pio_brams_0_serverAdapterA_moveToOutFIFO
  assign CAN_FIRE_RL_pio_brams_0_serverAdapterA_moveToOutFIFO =
	     pio_brams_0_serverAdapterA_outDataCore$FULL_N &&
	     pio_brams_0_serverAdapterA_s1[1] ;
  assign WILL_FIRE_RL_pio_brams_0_serverAdapterA_moveToOutFIFO =
	     CAN_FIRE_RL_pio_brams_0_serverAdapterA_moveToOutFIFO ;

  // rule RL_pio_brams_0_serverAdapterA_overRun
  assign CAN_FIRE_RL_pio_brams_0_serverAdapterA_overRun =
	     pio_brams_0_serverAdapterA_s1[1] &&
	     !pio_brams_0_serverAdapterA_outDataCore$FULL_N ;
  assign WILL_FIRE_RL_pio_brams_0_serverAdapterA_overRun =
	     CAN_FIRE_RL_pio_brams_0_serverAdapterA_overRun ;

  // rule RL_pio_brams_0_serverAdapterA_outData_setFirstCore
  assign CAN_FIRE_RL_pio_brams_0_serverAdapterA_outData_setFirstCore =
	     pio_brams_0_serverAdapterA_outDataCore$EMPTY_N ;
  assign WILL_FIRE_RL_pio_brams_0_serverAdapterA_outData_setFirstCore =
	     pio_brams_0_serverAdapterA_outDataCore$EMPTY_N ;

  // rule RL_pio_brams_0_serverAdapterA_outData_setFirstEnq
  assign CAN_FIRE_RL_pio_brams_0_serverAdapterA_outData_setFirstEnq =
	     !pio_brams_0_serverAdapterA_outDataCore$EMPTY_N &&
	     pio_brams_0_serverAdapterA_outData_enqData$whas ;
  assign WILL_FIRE_RL_pio_brams_0_serverAdapterA_outData_setFirstEnq =
	     CAN_FIRE_RL_pio_brams_0_serverAdapterA_outData_setFirstEnq ;

  // rule RL_pio_brams_0_serverAdapterA_outData_enqOnly
  assign CAN_FIRE_RL_pio_brams_0_serverAdapterA_outData_enqOnly =
	     pio_brams_0_serverAdapterA_outDataCore$FULL_N &&
	     pio_brams_0_serverAdapterA_outData_enqData$whas ;
  assign WILL_FIRE_RL_pio_brams_0_serverAdapterA_outData_enqOnly =
	     CAN_FIRE_RL_pio_brams_0_serverAdapterA_outData_enqOnly ;

  // rule RL_pio_brams_0_serverAdapterA_outData_deqOnly
  assign CAN_FIRE_RL_pio_brams_0_serverAdapterA_outData_deqOnly = 1'b0 ;
  assign WILL_FIRE_RL_pio_brams_0_serverAdapterA_outData_deqOnly = 1'b0 ;

  // rule RL_pio_brams_0_serverAdapterA_outData_enqAndDeq
  assign CAN_FIRE_RL_pio_brams_0_serverAdapterA_outData_enqAndDeq = 1'b0 ;
  assign WILL_FIRE_RL_pio_brams_0_serverAdapterA_outData_enqAndDeq = 1'b0 ;

  // rule RL_pio_brams_0_serverAdapterA_cnt_finalAdd
  assign CAN_FIRE_RL_pio_brams_0_serverAdapterA_cnt_finalAdd = 1'b0 ;
  assign WILL_FIRE_RL_pio_brams_0_serverAdapterA_cnt_finalAdd = 1'b0 ;

  // rule RL_pio_brams_0_serverAdapterA_s1__dreg_update
  assign CAN_FIRE_RL_pio_brams_0_serverAdapterA_s1__dreg_update = 1'd1 ;
  assign WILL_FIRE_RL_pio_brams_0_serverAdapterA_s1__dreg_update = 1'd1 ;

  // rule RL_pio_brams_0_serverAdapterB_stageReadResponseAlways
  assign CAN_FIRE_RL_pio_brams_0_serverAdapterB_stageReadResponseAlways =
	     EN_pio_0_request_put ;
  assign WILL_FIRE_RL_pio_brams_0_serverAdapterB_stageReadResponseAlways =
	     EN_pio_0_request_put ;

  // rule RL_pio_brams_0_serverAdapterB_moveToOutFIFO
  assign CAN_FIRE_RL_pio_brams_0_serverAdapterB_moveToOutFIFO =
	     pio_brams_0_serverAdapterB_outDataCore$FULL_N &&
	     pio_brams_0_serverAdapterB_s1[1] ;
  assign WILL_FIRE_RL_pio_brams_0_serverAdapterB_moveToOutFIFO =
	     CAN_FIRE_RL_pio_brams_0_serverAdapterB_moveToOutFIFO ;

  // rule RL_pio_brams_0_serverAdapterB_overRun
  assign CAN_FIRE_RL_pio_brams_0_serverAdapterB_overRun =
	     pio_brams_0_serverAdapterB_s1[1] &&
	     !pio_brams_0_serverAdapterB_outDataCore$FULL_N ;
  assign WILL_FIRE_RL_pio_brams_0_serverAdapterB_overRun =
	     CAN_FIRE_RL_pio_brams_0_serverAdapterB_overRun ;

  // rule RL_pio_brams_0_serverAdapterB_outData_setFirstCore
  assign CAN_FIRE_RL_pio_brams_0_serverAdapterB_outData_setFirstCore =
	     pio_brams_0_serverAdapterB_outDataCore$EMPTY_N ;
  assign WILL_FIRE_RL_pio_brams_0_serverAdapterB_outData_setFirstCore =
	     pio_brams_0_serverAdapterB_outDataCore$EMPTY_N ;

  // rule RL_pio_brams_0_serverAdapterB_outData_setFirstEnq
  assign CAN_FIRE_RL_pio_brams_0_serverAdapterB_outData_setFirstEnq =
	     !pio_brams_0_serverAdapterB_outDataCore$EMPTY_N &&
	     pio_brams_0_serverAdapterB_outData_enqData$whas ;
  assign WILL_FIRE_RL_pio_brams_0_serverAdapterB_outData_setFirstEnq =
	     CAN_FIRE_RL_pio_brams_0_serverAdapterB_outData_setFirstEnq ;

  // rule RL_pio_brams_0_serverAdapterB_outData_enqOnly
  assign CAN_FIRE_RL_pio_brams_0_serverAdapterB_outData_enqOnly =
	     pio_brams_0_serverAdapterB_outDataCore$FULL_N &&
	     !EN_pio_0_response_get &&
	     pio_brams_0_serverAdapterB_outData_enqData$whas ;
  assign WILL_FIRE_RL_pio_brams_0_serverAdapterB_outData_enqOnly =
	     CAN_FIRE_RL_pio_brams_0_serverAdapterB_outData_enqOnly ;

  // rule RL_pio_brams_0_serverAdapterB_outData_deqOnly
  assign CAN_FIRE_RL_pio_brams_0_serverAdapterB_outData_deqOnly =
	     pio_brams_0_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_pio_0_response_get &&
	     !pio_brams_0_serverAdapterB_outData_enqData$whas ;
  assign WILL_FIRE_RL_pio_brams_0_serverAdapterB_outData_deqOnly =
	     CAN_FIRE_RL_pio_brams_0_serverAdapterB_outData_deqOnly ;

  // rule RL_pio_brams_0_serverAdapterB_outData_enqAndDeq
  assign CAN_FIRE_RL_pio_brams_0_serverAdapterB_outData_enqAndDeq =
	     pio_brams_0_serverAdapterB_outDataCore$EMPTY_N &&
	     pio_brams_0_serverAdapterB_outDataCore$FULL_N &&
	     EN_pio_0_response_get &&
	     pio_brams_0_serverAdapterB_outData_enqData$whas ;
  assign WILL_FIRE_RL_pio_brams_0_serverAdapterB_outData_enqAndDeq =
	     CAN_FIRE_RL_pio_brams_0_serverAdapterB_outData_enqAndDeq ;

  // rule RL_pio_brams_0_serverAdapterB_cnt_finalAdd
  assign CAN_FIRE_RL_pio_brams_0_serverAdapterB_cnt_finalAdd =
	     pio_brams_0_serverAdapterB_cnt_1$whas || EN_pio_0_response_get ;
  assign WILL_FIRE_RL_pio_brams_0_serverAdapterB_cnt_finalAdd =
	     CAN_FIRE_RL_pio_brams_0_serverAdapterB_cnt_finalAdd ;

  // rule RL_pio_brams_0_serverAdapterB_s1__dreg_update
  assign CAN_FIRE_RL_pio_brams_0_serverAdapterB_s1__dreg_update = 1'd1 ;
  assign WILL_FIRE_RL_pio_brams_0_serverAdapterB_s1__dreg_update = 1'd1 ;

  // rule RL_pio_brams_1_serverAdapterA_stageReadResponseAlways
  assign CAN_FIRE_RL_pio_brams_1_serverAdapterA_stageReadResponseAlways =
	     1'b0 ;
  assign WILL_FIRE_RL_pio_brams_1_serverAdapterA_stageReadResponseAlways =
	     1'b0 ;

  // rule RL_pio_brams_1_serverAdapterA_moveToOutFIFO
  assign CAN_FIRE_RL_pio_brams_1_serverAdapterA_moveToOutFIFO =
	     pio_brams_1_serverAdapterA_outDataCore$FULL_N &&
	     pio_brams_1_serverAdapterA_s1[1] ;
  assign WILL_FIRE_RL_pio_brams_1_serverAdapterA_moveToOutFIFO =
	     CAN_FIRE_RL_pio_brams_1_serverAdapterA_moveToOutFIFO ;

  // rule RL_pio_brams_1_serverAdapterA_overRun
  assign CAN_FIRE_RL_pio_brams_1_serverAdapterA_overRun =
	     pio_brams_1_serverAdapterA_s1[1] &&
	     !pio_brams_1_serverAdapterA_outDataCore$FULL_N ;
  assign WILL_FIRE_RL_pio_brams_1_serverAdapterA_overRun =
	     CAN_FIRE_RL_pio_brams_1_serverAdapterA_overRun ;

  // rule RL_pio_brams_1_serverAdapterA_outData_setFirstCore
  assign CAN_FIRE_RL_pio_brams_1_serverAdapterA_outData_setFirstCore =
	     pio_brams_1_serverAdapterA_outDataCore$EMPTY_N ;
  assign WILL_FIRE_RL_pio_brams_1_serverAdapterA_outData_setFirstCore =
	     pio_brams_1_serverAdapterA_outDataCore$EMPTY_N ;

  // rule RL_pio_brams_1_serverAdapterA_outData_setFirstEnq
  assign CAN_FIRE_RL_pio_brams_1_serverAdapterA_outData_setFirstEnq =
	     !pio_brams_1_serverAdapterA_outDataCore$EMPTY_N &&
	     pio_brams_1_serverAdapterA_outData_enqData$whas ;
  assign WILL_FIRE_RL_pio_brams_1_serverAdapterA_outData_setFirstEnq =
	     CAN_FIRE_RL_pio_brams_1_serverAdapterA_outData_setFirstEnq ;

  // rule RL_pio_brams_1_serverAdapterA_outData_enqOnly
  assign CAN_FIRE_RL_pio_brams_1_serverAdapterA_outData_enqOnly =
	     pio_brams_1_serverAdapterA_outDataCore$FULL_N &&
	     pio_brams_1_serverAdapterA_outData_enqData$whas ;
  assign WILL_FIRE_RL_pio_brams_1_serverAdapterA_outData_enqOnly =
	     CAN_FIRE_RL_pio_brams_1_serverAdapterA_outData_enqOnly ;

  // rule RL_pio_brams_1_serverAdapterA_outData_deqOnly
  assign CAN_FIRE_RL_pio_brams_1_serverAdapterA_outData_deqOnly = 1'b0 ;
  assign WILL_FIRE_RL_pio_brams_1_serverAdapterA_outData_deqOnly = 1'b0 ;

  // rule RL_pio_brams_1_serverAdapterA_outData_enqAndDeq
  assign CAN_FIRE_RL_pio_brams_1_serverAdapterA_outData_enqAndDeq = 1'b0 ;
  assign WILL_FIRE_RL_pio_brams_1_serverAdapterA_outData_enqAndDeq = 1'b0 ;

  // rule RL_pio_brams_1_serverAdapterA_cnt_finalAdd
  assign CAN_FIRE_RL_pio_brams_1_serverAdapterA_cnt_finalAdd = 1'b0 ;
  assign WILL_FIRE_RL_pio_brams_1_serverAdapterA_cnt_finalAdd = 1'b0 ;

  // rule RL_pio_brams_1_serverAdapterA_s1__dreg_update
  assign CAN_FIRE_RL_pio_brams_1_serverAdapterA_s1__dreg_update = 1'd1 ;
  assign WILL_FIRE_RL_pio_brams_1_serverAdapterA_s1__dreg_update = 1'd1 ;

  // rule RL_pio_brams_1_serverAdapterB_stageReadResponseAlways
  assign CAN_FIRE_RL_pio_brams_1_serverAdapterB_stageReadResponseAlways =
	     EN_pio_1_request_put ;
  assign WILL_FIRE_RL_pio_brams_1_serverAdapterB_stageReadResponseAlways =
	     EN_pio_1_request_put ;

  // rule RL_pio_brams_1_serverAdapterB_moveToOutFIFO
  assign CAN_FIRE_RL_pio_brams_1_serverAdapterB_moveToOutFIFO =
	     pio_brams_1_serverAdapterB_outDataCore$FULL_N &&
	     pio_brams_1_serverAdapterB_s1[1] ;
  assign WILL_FIRE_RL_pio_brams_1_serverAdapterB_moveToOutFIFO =
	     CAN_FIRE_RL_pio_brams_1_serverAdapterB_moveToOutFIFO ;

  // rule RL_pio_brams_1_serverAdapterB_overRun
  assign CAN_FIRE_RL_pio_brams_1_serverAdapterB_overRun =
	     pio_brams_1_serverAdapterB_s1[1] &&
	     !pio_brams_1_serverAdapterB_outDataCore$FULL_N ;
  assign WILL_FIRE_RL_pio_brams_1_serverAdapterB_overRun =
	     CAN_FIRE_RL_pio_brams_1_serverAdapterB_overRun ;

  // rule RL_pio_brams_1_serverAdapterB_outData_setFirstCore
  assign CAN_FIRE_RL_pio_brams_1_serverAdapterB_outData_setFirstCore =
	     pio_brams_1_serverAdapterB_outDataCore$EMPTY_N ;
  assign WILL_FIRE_RL_pio_brams_1_serverAdapterB_outData_setFirstCore =
	     pio_brams_1_serverAdapterB_outDataCore$EMPTY_N ;

  // rule RL_pio_brams_1_serverAdapterB_outData_setFirstEnq
  assign CAN_FIRE_RL_pio_brams_1_serverAdapterB_outData_setFirstEnq =
	     !pio_brams_1_serverAdapterB_outDataCore$EMPTY_N &&
	     pio_brams_1_serverAdapterB_outData_enqData$whas ;
  assign WILL_FIRE_RL_pio_brams_1_serverAdapterB_outData_setFirstEnq =
	     CAN_FIRE_RL_pio_brams_1_serverAdapterB_outData_setFirstEnq ;

  // rule RL_pio_brams_1_serverAdapterB_outData_enqOnly
  assign CAN_FIRE_RL_pio_brams_1_serverAdapterB_outData_enqOnly =
	     pio_brams_1_serverAdapterB_outDataCore$FULL_N &&
	     !EN_pio_1_response_get &&
	     pio_brams_1_serverAdapterB_outData_enqData$whas ;
  assign WILL_FIRE_RL_pio_brams_1_serverAdapterB_outData_enqOnly =
	     CAN_FIRE_RL_pio_brams_1_serverAdapterB_outData_enqOnly ;

  // rule RL_pio_brams_1_serverAdapterB_outData_deqOnly
  assign CAN_FIRE_RL_pio_brams_1_serverAdapterB_outData_deqOnly =
	     pio_brams_1_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_pio_1_response_get &&
	     !pio_brams_1_serverAdapterB_outData_enqData$whas ;
  assign WILL_FIRE_RL_pio_brams_1_serverAdapterB_outData_deqOnly =
	     CAN_FIRE_RL_pio_brams_1_serverAdapterB_outData_deqOnly ;

  // rule RL_pio_brams_1_serverAdapterB_outData_enqAndDeq
  assign CAN_FIRE_RL_pio_brams_1_serverAdapterB_outData_enqAndDeq =
	     pio_brams_1_serverAdapterB_outDataCore$EMPTY_N &&
	     pio_brams_1_serverAdapterB_outDataCore$FULL_N &&
	     EN_pio_1_response_get &&
	     pio_brams_1_serverAdapterB_outData_enqData$whas ;
  assign WILL_FIRE_RL_pio_brams_1_serverAdapterB_outData_enqAndDeq =
	     CAN_FIRE_RL_pio_brams_1_serverAdapterB_outData_enqAndDeq ;

  // rule RL_pio_brams_1_serverAdapterB_cnt_finalAdd
  assign CAN_FIRE_RL_pio_brams_1_serverAdapterB_cnt_finalAdd =
	     pio_brams_1_serverAdapterB_cnt_1$whas || EN_pio_1_response_get ;
  assign WILL_FIRE_RL_pio_brams_1_serverAdapterB_cnt_finalAdd =
	     CAN_FIRE_RL_pio_brams_1_serverAdapterB_cnt_finalAdd ;

  // rule RL_pio_brams_1_serverAdapterB_s1__dreg_update
  assign CAN_FIRE_RL_pio_brams_1_serverAdapterB_s1__dreg_update = 1'd1 ;
  assign WILL_FIRE_RL_pio_brams_1_serverAdapterB_s1__dreg_update = 1'd1 ;

  // rule RL_pio_brams_2_serverAdapterA_stageReadResponseAlways
  assign CAN_FIRE_RL_pio_brams_2_serverAdapterA_stageReadResponseAlways =
	     1'b0 ;
  assign WILL_FIRE_RL_pio_brams_2_serverAdapterA_stageReadResponseAlways =
	     1'b0 ;

  // rule RL_pio_brams_2_serverAdapterA_moveToOutFIFO
  assign CAN_FIRE_RL_pio_brams_2_serverAdapterA_moveToOutFIFO =
	     pio_brams_2_serverAdapterA_outDataCore$FULL_N &&
	     pio_brams_2_serverAdapterA_s1[1] ;
  assign WILL_FIRE_RL_pio_brams_2_serverAdapterA_moveToOutFIFO =
	     CAN_FIRE_RL_pio_brams_2_serverAdapterA_moveToOutFIFO ;

  // rule RL_pio_brams_2_serverAdapterA_overRun
  assign CAN_FIRE_RL_pio_brams_2_serverAdapterA_overRun =
	     pio_brams_2_serverAdapterA_s1[1] &&
	     !pio_brams_2_serverAdapterA_outDataCore$FULL_N ;
  assign WILL_FIRE_RL_pio_brams_2_serverAdapterA_overRun =
	     CAN_FIRE_RL_pio_brams_2_serverAdapterA_overRun ;

  // rule RL_pio_brams_2_serverAdapterA_outData_setFirstCore
  assign CAN_FIRE_RL_pio_brams_2_serverAdapterA_outData_setFirstCore =
	     pio_brams_2_serverAdapterA_outDataCore$EMPTY_N ;
  assign WILL_FIRE_RL_pio_brams_2_serverAdapterA_outData_setFirstCore =
	     pio_brams_2_serverAdapterA_outDataCore$EMPTY_N ;

  // rule RL_pio_brams_2_serverAdapterA_outData_setFirstEnq
  assign CAN_FIRE_RL_pio_brams_2_serverAdapterA_outData_setFirstEnq =
	     !pio_brams_2_serverAdapterA_outDataCore$EMPTY_N &&
	     pio_brams_2_serverAdapterA_outData_enqData$whas ;
  assign WILL_FIRE_RL_pio_brams_2_serverAdapterA_outData_setFirstEnq =
	     CAN_FIRE_RL_pio_brams_2_serverAdapterA_outData_setFirstEnq ;

  // rule RL_pio_brams_2_serverAdapterA_outData_enqOnly
  assign CAN_FIRE_RL_pio_brams_2_serverAdapterA_outData_enqOnly =
	     pio_brams_2_serverAdapterA_outDataCore$FULL_N &&
	     pio_brams_2_serverAdapterA_outData_enqData$whas ;
  assign WILL_FIRE_RL_pio_brams_2_serverAdapterA_outData_enqOnly =
	     CAN_FIRE_RL_pio_brams_2_serverAdapterA_outData_enqOnly ;

  // rule RL_pio_brams_2_serverAdapterA_outData_deqOnly
  assign CAN_FIRE_RL_pio_brams_2_serverAdapterA_outData_deqOnly = 1'b0 ;
  assign WILL_FIRE_RL_pio_brams_2_serverAdapterA_outData_deqOnly = 1'b0 ;

  // rule RL_pio_brams_2_serverAdapterA_outData_enqAndDeq
  assign CAN_FIRE_RL_pio_brams_2_serverAdapterA_outData_enqAndDeq = 1'b0 ;
  assign WILL_FIRE_RL_pio_brams_2_serverAdapterA_outData_enqAndDeq = 1'b0 ;

  // rule RL_pio_brams_2_serverAdapterA_cnt_finalAdd
  assign CAN_FIRE_RL_pio_brams_2_serverAdapterA_cnt_finalAdd = 1'b0 ;
  assign WILL_FIRE_RL_pio_brams_2_serverAdapterA_cnt_finalAdd = 1'b0 ;

  // rule RL_pio_brams_2_serverAdapterA_s1__dreg_update
  assign CAN_FIRE_RL_pio_brams_2_serverAdapterA_s1__dreg_update = 1'd1 ;
  assign WILL_FIRE_RL_pio_brams_2_serverAdapterA_s1__dreg_update = 1'd1 ;

  // rule RL_pio_brams_2_serverAdapterB_stageReadResponseAlways
  assign CAN_FIRE_RL_pio_brams_2_serverAdapterB_stageReadResponseAlways =
	     EN_pio_2_request_put ;
  assign WILL_FIRE_RL_pio_brams_2_serverAdapterB_stageReadResponseAlways =
	     EN_pio_2_request_put ;

  // rule RL_pio_brams_2_serverAdapterB_moveToOutFIFO
  assign CAN_FIRE_RL_pio_brams_2_serverAdapterB_moveToOutFIFO =
	     pio_brams_2_serverAdapterB_outDataCore$FULL_N &&
	     pio_brams_2_serverAdapterB_s1[1] ;
  assign WILL_FIRE_RL_pio_brams_2_serverAdapterB_moveToOutFIFO =
	     CAN_FIRE_RL_pio_brams_2_serverAdapterB_moveToOutFIFO ;

  // rule RL_pio_brams_2_serverAdapterB_overRun
  assign CAN_FIRE_RL_pio_brams_2_serverAdapterB_overRun =
	     pio_brams_2_serverAdapterB_s1[1] &&
	     !pio_brams_2_serverAdapterB_outDataCore$FULL_N ;
  assign WILL_FIRE_RL_pio_brams_2_serverAdapterB_overRun =
	     CAN_FIRE_RL_pio_brams_2_serverAdapterB_overRun ;

  // rule RL_pio_brams_2_serverAdapterB_outData_setFirstCore
  assign CAN_FIRE_RL_pio_brams_2_serverAdapterB_outData_setFirstCore =
	     pio_brams_2_serverAdapterB_outDataCore$EMPTY_N ;
  assign WILL_FIRE_RL_pio_brams_2_serverAdapterB_outData_setFirstCore =
	     pio_brams_2_serverAdapterB_outDataCore$EMPTY_N ;

  // rule RL_pio_brams_2_serverAdapterB_outData_setFirstEnq
  assign CAN_FIRE_RL_pio_brams_2_serverAdapterB_outData_setFirstEnq =
	     !pio_brams_2_serverAdapterB_outDataCore$EMPTY_N &&
	     pio_brams_2_serverAdapterB_outData_enqData$whas ;
  assign WILL_FIRE_RL_pio_brams_2_serverAdapterB_outData_setFirstEnq =
	     CAN_FIRE_RL_pio_brams_2_serverAdapterB_outData_setFirstEnq ;

  // rule RL_pio_brams_2_serverAdapterB_outData_enqOnly
  assign CAN_FIRE_RL_pio_brams_2_serverAdapterB_outData_enqOnly =
	     pio_brams_2_serverAdapterB_outDataCore$FULL_N &&
	     !EN_pio_2_response_get &&
	     pio_brams_2_serverAdapterB_outData_enqData$whas ;
  assign WILL_FIRE_RL_pio_brams_2_serverAdapterB_outData_enqOnly =
	     CAN_FIRE_RL_pio_brams_2_serverAdapterB_outData_enqOnly ;

  // rule RL_pio_brams_2_serverAdapterB_outData_deqOnly
  assign CAN_FIRE_RL_pio_brams_2_serverAdapterB_outData_deqOnly =
	     pio_brams_2_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_pio_2_response_get &&
	     !pio_brams_2_serverAdapterB_outData_enqData$whas ;
  assign WILL_FIRE_RL_pio_brams_2_serverAdapterB_outData_deqOnly =
	     CAN_FIRE_RL_pio_brams_2_serverAdapterB_outData_deqOnly ;

  // rule RL_pio_brams_2_serverAdapterB_outData_enqAndDeq
  assign CAN_FIRE_RL_pio_brams_2_serverAdapterB_outData_enqAndDeq =
	     pio_brams_2_serverAdapterB_outDataCore$EMPTY_N &&
	     pio_brams_2_serverAdapterB_outDataCore$FULL_N &&
	     EN_pio_2_response_get &&
	     pio_brams_2_serverAdapterB_outData_enqData$whas ;
  assign WILL_FIRE_RL_pio_brams_2_serverAdapterB_outData_enqAndDeq =
	     CAN_FIRE_RL_pio_brams_2_serverAdapterB_outData_enqAndDeq ;

  // rule RL_pio_brams_2_serverAdapterB_cnt_finalAdd
  assign CAN_FIRE_RL_pio_brams_2_serverAdapterB_cnt_finalAdd =
	     pio_brams_2_serverAdapterB_cnt_1$whas || EN_pio_2_response_get ;
  assign WILL_FIRE_RL_pio_brams_2_serverAdapterB_cnt_finalAdd =
	     CAN_FIRE_RL_pio_brams_2_serverAdapterB_cnt_finalAdd ;

  // rule RL_pio_brams_2_serverAdapterB_s1__dreg_update
  assign CAN_FIRE_RL_pio_brams_2_serverAdapterB_s1__dreg_update = 1'd1 ;
  assign WILL_FIRE_RL_pio_brams_2_serverAdapterB_s1__dreg_update = 1'd1 ;

  // rule RL_pio_brams_3_serverAdapterA_stageReadResponseAlways
  assign CAN_FIRE_RL_pio_brams_3_serverAdapterA_stageReadResponseAlways =
	     1'b0 ;
  assign WILL_FIRE_RL_pio_brams_3_serverAdapterA_stageReadResponseAlways =
	     1'b0 ;

  // rule RL_pio_brams_3_serverAdapterA_moveToOutFIFO
  assign CAN_FIRE_RL_pio_brams_3_serverAdapterA_moveToOutFIFO =
	     pio_brams_3_serverAdapterA_outDataCore$FULL_N &&
	     pio_brams_3_serverAdapterA_s1[1] ;
  assign WILL_FIRE_RL_pio_brams_3_serverAdapterA_moveToOutFIFO =
	     CAN_FIRE_RL_pio_brams_3_serverAdapterA_moveToOutFIFO ;

  // rule RL_pio_brams_3_serverAdapterA_overRun
  assign CAN_FIRE_RL_pio_brams_3_serverAdapterA_overRun =
	     pio_brams_3_serverAdapterA_s1[1] &&
	     !pio_brams_3_serverAdapterA_outDataCore$FULL_N ;
  assign WILL_FIRE_RL_pio_brams_3_serverAdapterA_overRun =
	     CAN_FIRE_RL_pio_brams_3_serverAdapterA_overRun ;

  // rule RL_pio_brams_3_serverAdapterA_outData_setFirstCore
  assign CAN_FIRE_RL_pio_brams_3_serverAdapterA_outData_setFirstCore =
	     pio_brams_3_serverAdapterA_outDataCore$EMPTY_N ;
  assign WILL_FIRE_RL_pio_brams_3_serverAdapterA_outData_setFirstCore =
	     pio_brams_3_serverAdapterA_outDataCore$EMPTY_N ;

  // rule RL_pio_brams_3_serverAdapterA_outData_setFirstEnq
  assign CAN_FIRE_RL_pio_brams_3_serverAdapterA_outData_setFirstEnq =
	     !pio_brams_3_serverAdapterA_outDataCore$EMPTY_N &&
	     pio_brams_3_serverAdapterA_outData_enqData$whas ;
  assign WILL_FIRE_RL_pio_brams_3_serverAdapterA_outData_setFirstEnq =
	     CAN_FIRE_RL_pio_brams_3_serverAdapterA_outData_setFirstEnq ;

  // rule RL_pio_brams_3_serverAdapterA_outData_enqOnly
  assign CAN_FIRE_RL_pio_brams_3_serverAdapterA_outData_enqOnly =
	     pio_brams_3_serverAdapterA_outDataCore$FULL_N &&
	     pio_brams_3_serverAdapterA_outData_enqData$whas ;
  assign WILL_FIRE_RL_pio_brams_3_serverAdapterA_outData_enqOnly =
	     CAN_FIRE_RL_pio_brams_3_serverAdapterA_outData_enqOnly ;

  // rule RL_pio_brams_3_serverAdapterA_outData_deqOnly
  assign CAN_FIRE_RL_pio_brams_3_serverAdapterA_outData_deqOnly = 1'b0 ;
  assign WILL_FIRE_RL_pio_brams_3_serverAdapterA_outData_deqOnly = 1'b0 ;

  // rule RL_pio_brams_3_serverAdapterA_outData_enqAndDeq
  assign CAN_FIRE_RL_pio_brams_3_serverAdapterA_outData_enqAndDeq = 1'b0 ;
  assign WILL_FIRE_RL_pio_brams_3_serverAdapterA_outData_enqAndDeq = 1'b0 ;

  // rule RL_pio_brams_3_serverAdapterA_cnt_finalAdd
  assign CAN_FIRE_RL_pio_brams_3_serverAdapterA_cnt_finalAdd = 1'b0 ;
  assign WILL_FIRE_RL_pio_brams_3_serverAdapterA_cnt_finalAdd = 1'b0 ;

  // rule RL_pio_brams_3_serverAdapterA_s1__dreg_update
  assign CAN_FIRE_RL_pio_brams_3_serverAdapterA_s1__dreg_update = 1'd1 ;
  assign WILL_FIRE_RL_pio_brams_3_serverAdapterA_s1__dreg_update = 1'd1 ;

  // rule RL_pio_brams_3_serverAdapterB_stageReadResponseAlways
  assign CAN_FIRE_RL_pio_brams_3_serverAdapterB_stageReadResponseAlways =
	     EN_pio_3_request_put ;
  assign WILL_FIRE_RL_pio_brams_3_serverAdapterB_stageReadResponseAlways =
	     EN_pio_3_request_put ;

  // rule RL_pio_brams_3_serverAdapterB_moveToOutFIFO
  assign CAN_FIRE_RL_pio_brams_3_serverAdapterB_moveToOutFIFO =
	     pio_brams_3_serverAdapterB_outDataCore$FULL_N &&
	     pio_brams_3_serverAdapterB_s1[1] ;
  assign WILL_FIRE_RL_pio_brams_3_serverAdapterB_moveToOutFIFO =
	     CAN_FIRE_RL_pio_brams_3_serverAdapterB_moveToOutFIFO ;

  // rule RL_pio_brams_3_serverAdapterB_overRun
  assign CAN_FIRE_RL_pio_brams_3_serverAdapterB_overRun =
	     pio_brams_3_serverAdapterB_s1[1] &&
	     !pio_brams_3_serverAdapterB_outDataCore$FULL_N ;
  assign WILL_FIRE_RL_pio_brams_3_serverAdapterB_overRun =
	     CAN_FIRE_RL_pio_brams_3_serverAdapterB_overRun ;

  // rule RL_pio_brams_3_serverAdapterB_outData_setFirstCore
  assign CAN_FIRE_RL_pio_brams_3_serverAdapterB_outData_setFirstCore =
	     pio_brams_3_serverAdapterB_outDataCore$EMPTY_N ;
  assign WILL_FIRE_RL_pio_brams_3_serverAdapterB_outData_setFirstCore =
	     pio_brams_3_serverAdapterB_outDataCore$EMPTY_N ;

  // rule RL_pio_brams_3_serverAdapterB_outData_setFirstEnq
  assign CAN_FIRE_RL_pio_brams_3_serverAdapterB_outData_setFirstEnq =
	     !pio_brams_3_serverAdapterB_outDataCore$EMPTY_N &&
	     pio_brams_3_serverAdapterB_outData_enqData$whas ;
  assign WILL_FIRE_RL_pio_brams_3_serverAdapterB_outData_setFirstEnq =
	     CAN_FIRE_RL_pio_brams_3_serverAdapterB_outData_setFirstEnq ;

  // rule RL_pio_brams_3_serverAdapterB_outData_enqOnly
  assign CAN_FIRE_RL_pio_brams_3_serverAdapterB_outData_enqOnly =
	     pio_brams_3_serverAdapterB_outDataCore$FULL_N &&
	     !EN_pio_3_response_get &&
	     pio_brams_3_serverAdapterB_outData_enqData$whas ;
  assign WILL_FIRE_RL_pio_brams_3_serverAdapterB_outData_enqOnly =
	     CAN_FIRE_RL_pio_brams_3_serverAdapterB_outData_enqOnly ;

  // rule RL_pio_brams_3_serverAdapterB_outData_deqOnly
  assign CAN_FIRE_RL_pio_brams_3_serverAdapterB_outData_deqOnly =
	     pio_brams_3_serverAdapterB_outDataCore$EMPTY_N &&
	     EN_pio_3_response_get &&
	     !pio_brams_3_serverAdapterB_outData_enqData$whas ;
  assign WILL_FIRE_RL_pio_brams_3_serverAdapterB_outData_deqOnly =
	     CAN_FIRE_RL_pio_brams_3_serverAdapterB_outData_deqOnly ;

  // rule RL_pio_brams_3_serverAdapterB_outData_enqAndDeq
  assign CAN_FIRE_RL_pio_brams_3_serverAdapterB_outData_enqAndDeq =
	     pio_brams_3_serverAdapterB_outDataCore$EMPTY_N &&
	     pio_brams_3_serverAdapterB_outDataCore$FULL_N &&
	     EN_pio_3_response_get &&
	     pio_brams_3_serverAdapterB_outData_enqData$whas ;
  assign WILL_FIRE_RL_pio_brams_3_serverAdapterB_outData_enqAndDeq =
	     CAN_FIRE_RL_pio_brams_3_serverAdapterB_outData_enqAndDeq ;

  // rule RL_pio_brams_3_serverAdapterB_cnt_finalAdd
  assign CAN_FIRE_RL_pio_brams_3_serverAdapterB_cnt_finalAdd =
	     pio_brams_3_serverAdapterB_cnt_1$whas || EN_pio_3_response_get ;
  assign WILL_FIRE_RL_pio_brams_3_serverAdapterB_cnt_finalAdd =
	     CAN_FIRE_RL_pio_brams_3_serverAdapterB_cnt_finalAdd ;

  // rule RL_pio_brams_3_serverAdapterB_s1__dreg_update
  assign CAN_FIRE_RL_pio_brams_3_serverAdapterB_s1__dreg_update = 1'd1 ;
  assign WILL_FIRE_RL_pio_brams_3_serverAdapterB_s1__dreg_update = 1'd1 ;

  // inlined wires
  assign pio_brams_0_serverAdapterA_outData_enqData$whas =
	     WILL_FIRE_RL_pio_brams_0_serverAdapterA_moveToOutFIFO &&
	     pio_brams_0_serverAdapterA_s1[0] ;
  assign pio_brams_0_serverAdapterB_outData_enqData$whas =
	     WILL_FIRE_RL_pio_brams_0_serverAdapterB_moveToOutFIFO &&
	     pio_brams_0_serverAdapterB_s1[0] ;
  assign pio_brams_0_serverAdapterB_outData_outData$whas =
	     WILL_FIRE_RL_pio_brams_0_serverAdapterB_outData_setFirstEnq ||
	     pio_brams_0_serverAdapterB_outDataCore$EMPTY_N ;
  assign pio_brams_0_serverAdapterB_cnt_1$whas =
	     EN_pio_0_request_put && (!ab__h2997[1] || ab__h2997[0]) ;
  assign pio_brams_0_serverAdapterB_s1_1$wget =
	     { 1'd1, !ab__h2997[1] || ab__h2997[0] } ;
  assign pio_brams_1_serverAdapterA_outData_enqData$whas =
	     WILL_FIRE_RL_pio_brams_1_serverAdapterA_moveToOutFIFO &&
	     pio_brams_1_serverAdapterA_s1[0] ;
  assign pio_brams_1_serverAdapterB_outData_enqData$whas =
	     WILL_FIRE_RL_pio_brams_1_serverAdapterB_moveToOutFIFO &&
	     pio_brams_1_serverAdapterB_s1[0] ;
  assign pio_brams_1_serverAdapterB_outData_outData$whas =
	     WILL_FIRE_RL_pio_brams_1_serverAdapterB_outData_setFirstEnq ||
	     pio_brams_1_serverAdapterB_outDataCore$EMPTY_N ;
  assign pio_brams_1_serverAdapterB_cnt_1$whas =
	     EN_pio_1_request_put && (!ab__h5945[1] || ab__h5945[0]) ;
  assign pio_brams_1_serverAdapterB_s1_1$wget =
	     { 1'd1, !ab__h5945[1] || ab__h5945[0] } ;
  assign pio_brams_2_serverAdapterA_outData_enqData$whas =
	     WILL_FIRE_RL_pio_brams_2_serverAdapterA_moveToOutFIFO &&
	     pio_brams_2_serverAdapterA_s1[0] ;
  assign pio_brams_2_serverAdapterB_outData_enqData$whas =
	     WILL_FIRE_RL_pio_brams_2_serverAdapterB_moveToOutFIFO &&
	     pio_brams_2_serverAdapterB_s1[0] ;
  assign pio_brams_2_serverAdapterB_outData_outData$whas =
	     WILL_FIRE_RL_pio_brams_2_serverAdapterB_outData_setFirstEnq ||
	     pio_brams_2_serverAdapterB_outDataCore$EMPTY_N ;
  assign pio_brams_2_serverAdapterB_cnt_1$whas =
	     EN_pio_2_request_put && (!ab__h8893[1] || ab__h8893[0]) ;
  assign pio_brams_2_serverAdapterB_s1_1$wget =
	     { 1'd1, !ab__h8893[1] || ab__h8893[0] } ;
  assign pio_brams_3_serverAdapterA_outData_enqData$whas =
	     WILL_FIRE_RL_pio_brams_3_serverAdapterA_moveToOutFIFO &&
	     pio_brams_3_serverAdapterA_s1[0] ;
  assign pio_brams_3_serverAdapterB_outData_enqData$whas =
	     WILL_FIRE_RL_pio_brams_3_serverAdapterB_moveToOutFIFO &&
	     pio_brams_3_serverAdapterB_s1[0] ;
  assign pio_brams_3_serverAdapterB_outData_outData$whas =
	     WILL_FIRE_RL_pio_brams_3_serverAdapterB_outData_setFirstEnq ||
	     pio_brams_3_serverAdapterB_outDataCore$EMPTY_N ;
  assign pio_brams_3_serverAdapterB_cnt_1$whas =
	     EN_pio_3_request_put && (!ab__h11841[1] || ab__h11841[0]) ;
  assign pio_brams_3_serverAdapterB_s1_1$wget =
	     { 1'd1, !ab__h11841[1] || ab__h11841[0] } ;

  // register pio_brams_0_serverAdapterA_cnt
  assign pio_brams_0_serverAdapterA_cnt$D_IN =
	     pio_brams_0_serverAdapterA_cnt + 3'd0 + 3'd0 ;
  assign pio_brams_0_serverAdapterA_cnt$EN = 1'b0 ;

  // register pio_brams_0_serverAdapterA_s1
  assign pio_brams_0_serverAdapterA_s1$D_IN = 2'b01 ;
  assign pio_brams_0_serverAdapterA_s1$EN = 1'd1 ;

  // register pio_brams_0_serverAdapterB_cnt
  assign pio_brams_0_serverAdapterB_cnt$D_IN =
	     pio_brams_0_serverAdapterB_cnt_3_PLUS_IF_pio_b_ETC___d89 ;
  assign pio_brams_0_serverAdapterB_cnt$EN =
	     CAN_FIRE_RL_pio_brams_0_serverAdapterB_cnt_finalAdd ;

  // register pio_brams_0_serverAdapterB_s1
  assign pio_brams_0_serverAdapterB_s1$D_IN =
	     { EN_pio_0_request_put &&
	       pio_brams_0_serverAdapterB_s1_1$wget[1],
	       pio_brams_0_serverAdapterB_s1_1$wget[0] } ;
  assign pio_brams_0_serverAdapterB_s1$EN = 1'd1 ;

  // register pio_brams_1_serverAdapterA_cnt
  assign pio_brams_1_serverAdapterA_cnt$D_IN =
	     pio_brams_1_serverAdapterA_cnt + 3'd0 + 3'd0 ;
  assign pio_brams_1_serverAdapterA_cnt$EN = 1'b0 ;

  // register pio_brams_1_serverAdapterA_s1
  assign pio_brams_1_serverAdapterA_s1$D_IN = 2'b01 ;
  assign pio_brams_1_serverAdapterA_s1$EN = 1'd1 ;

  // register pio_brams_1_serverAdapterB_cnt
  assign pio_brams_1_serverAdapterB_cnt$D_IN =
	     pio_brams_1_serverAdapterB_cnt_97_PLUS_IF_pio__ETC___d203 ;
  assign pio_brams_1_serverAdapterB_cnt$EN =
	     CAN_FIRE_RL_pio_brams_1_serverAdapterB_cnt_finalAdd ;

  // register pio_brams_1_serverAdapterB_s1
  assign pio_brams_1_serverAdapterB_s1$D_IN =
	     { EN_pio_1_request_put &&
	       pio_brams_1_serverAdapterB_s1_1$wget[1],
	       pio_brams_1_serverAdapterB_s1_1$wget[0] } ;
  assign pio_brams_1_serverAdapterB_s1$EN = 1'd1 ;

  // register pio_brams_2_serverAdapterA_cnt
  assign pio_brams_2_serverAdapterA_cnt$D_IN =
	     pio_brams_2_serverAdapterA_cnt + 3'd0 + 3'd0 ;
  assign pio_brams_2_serverAdapterA_cnt$EN = 1'b0 ;

  // register pio_brams_2_serverAdapterA_s1
  assign pio_brams_2_serverAdapterA_s1$D_IN = 2'b01 ;
  assign pio_brams_2_serverAdapterA_s1$EN = 1'd1 ;

  // register pio_brams_2_serverAdapterB_cnt
  assign pio_brams_2_serverAdapterB_cnt$D_IN =
	     pio_brams_2_serverAdapterB_cnt_11_PLUS_IF_pio__ETC___d317 ;
  assign pio_brams_2_serverAdapterB_cnt$EN =
	     CAN_FIRE_RL_pio_brams_2_serverAdapterB_cnt_finalAdd ;

  // register pio_brams_2_serverAdapterB_s1
  assign pio_brams_2_serverAdapterB_s1$D_IN =
	     { EN_pio_2_request_put &&
	       pio_brams_2_serverAdapterB_s1_1$wget[1],
	       pio_brams_2_serverAdapterB_s1_1$wget[0] } ;
  assign pio_brams_2_serverAdapterB_s1$EN = 1'd1 ;

  // register pio_brams_3_serverAdapterA_cnt
  assign pio_brams_3_serverAdapterA_cnt$D_IN =
	     pio_brams_3_serverAdapterA_cnt + 3'd0 + 3'd0 ;
  assign pio_brams_3_serverAdapterA_cnt$EN = 1'b0 ;

  // register pio_brams_3_serverAdapterA_s1
  assign pio_brams_3_serverAdapterA_s1$D_IN = 2'b01 ;
  assign pio_brams_3_serverAdapterA_s1$EN = 1'd1 ;

  // register pio_brams_3_serverAdapterB_cnt
  assign pio_brams_3_serverAdapterB_cnt$D_IN =
	     pio_brams_3_serverAdapterB_cnt_25_PLUS_IF_pio__ETC___d431 ;
  assign pio_brams_3_serverAdapterB_cnt$EN =
	     CAN_FIRE_RL_pio_brams_3_serverAdapterB_cnt_finalAdd ;

  // register pio_brams_3_serverAdapterB_s1
  assign pio_brams_3_serverAdapterB_s1$D_IN =
	     { EN_pio_3_request_put &&
	       pio_brams_3_serverAdapterB_s1_1$wget[1],
	       pio_brams_3_serverAdapterB_s1_1$wget[0] } ;
  assign pio_brams_3_serverAdapterB_s1$EN = 1'd1 ;

  // submodule pio_brams_0_memory
  assign pio_brams_0_memory$ADDRA = 18'h0 ;
  assign pio_brams_0_memory$ADDRB = pio_0_request_put[81:64] ;
  assign pio_brams_0_memory$DIA = 64'h0 ;
  assign pio_brams_0_memory$DIB = pio_0_request_put[63:0] ;
  assign pio_brams_0_memory$WEA = 1'b0 ;
  assign pio_brams_0_memory$WEB = pio_0_request_put[83] ;
  assign pio_brams_0_memory$ENA = 1'b0 ;
  assign pio_brams_0_memory$ENB = EN_pio_0_request_put ;

  // submodule pio_brams_0_serverAdapterA_outDataCore
  assign pio_brams_0_serverAdapterA_outDataCore$D_IN =
	     pio_brams_0_memory$DOA ;
  assign pio_brams_0_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_pio_brams_0_serverAdapterA_outData_enqOnly ;
  assign pio_brams_0_serverAdapterA_outDataCore$DEQ = 1'b0 ;
  assign pio_brams_0_serverAdapterA_outDataCore$CLR = 1'b0 ;

  // submodule pio_brams_0_serverAdapterB_outDataCore
  assign pio_brams_0_serverAdapterB_outDataCore$D_IN =
	     pio_brams_0_memory$DOB ;
  assign pio_brams_0_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_pio_brams_0_serverAdapterB_outData_enqAndDeq ||
	     WILL_FIRE_RL_pio_brams_0_serverAdapterB_outData_enqOnly ;
  assign pio_brams_0_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_pio_brams_0_serverAdapterB_outData_enqAndDeq ||
	     WILL_FIRE_RL_pio_brams_0_serverAdapterB_outData_deqOnly ;
  assign pio_brams_0_serverAdapterB_outDataCore$CLR = 1'b0 ;

  // submodule pio_brams_1_memory
  assign pio_brams_1_memory$ADDRA = 18'h0 ;
  assign pio_brams_1_memory$ADDRB = pio_1_request_put[81:64] ;
  assign pio_brams_1_memory$DIA = 64'h0 ;
  assign pio_brams_1_memory$DIB = pio_1_request_put[63:0] ;
  assign pio_brams_1_memory$WEA = 1'b0 ;
  assign pio_brams_1_memory$WEB = pio_1_request_put[83] ;
  assign pio_brams_1_memory$ENA = 1'b0 ;
  assign pio_brams_1_memory$ENB = EN_pio_1_request_put ;

  // submodule pio_brams_1_serverAdapterA_outDataCore
  assign pio_brams_1_serverAdapterA_outDataCore$D_IN =
	     pio_brams_1_memory$DOA ;
  assign pio_brams_1_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_pio_brams_1_serverAdapterA_outData_enqOnly ;
  assign pio_brams_1_serverAdapterA_outDataCore$DEQ = 1'b0 ;
  assign pio_brams_1_serverAdapterA_outDataCore$CLR = 1'b0 ;

  // submodule pio_brams_1_serverAdapterB_outDataCore
  assign pio_brams_1_serverAdapterB_outDataCore$D_IN =
	     pio_brams_1_memory$DOB ;
  assign pio_brams_1_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_pio_brams_1_serverAdapterB_outData_enqAndDeq ||
	     WILL_FIRE_RL_pio_brams_1_serverAdapterB_outData_enqOnly ;
  assign pio_brams_1_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_pio_brams_1_serverAdapterB_outData_enqAndDeq ||
	     WILL_FIRE_RL_pio_brams_1_serverAdapterB_outData_deqOnly ;
  assign pio_brams_1_serverAdapterB_outDataCore$CLR = 1'b0 ;

  // submodule pio_brams_2_memory
  assign pio_brams_2_memory$ADDRA = 18'h0 ;
  assign pio_brams_2_memory$ADDRB = pio_2_request_put[81:64] ;
  assign pio_brams_2_memory$DIA = 64'h0 ;
  assign pio_brams_2_memory$DIB = pio_2_request_put[63:0] ;
  assign pio_brams_2_memory$WEA = 1'b0 ;
  assign pio_brams_2_memory$WEB = pio_2_request_put[83] ;
  assign pio_brams_2_memory$ENA = 1'b0 ;
  assign pio_brams_2_memory$ENB = EN_pio_2_request_put ;

  // submodule pio_brams_2_serverAdapterA_outDataCore
  assign pio_brams_2_serverAdapterA_outDataCore$D_IN =
	     pio_brams_2_memory$DOA ;
  assign pio_brams_2_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_pio_brams_2_serverAdapterA_outData_enqOnly ;
  assign pio_brams_2_serverAdapterA_outDataCore$DEQ = 1'b0 ;
  assign pio_brams_2_serverAdapterA_outDataCore$CLR = 1'b0 ;

  // submodule pio_brams_2_serverAdapterB_outDataCore
  assign pio_brams_2_serverAdapterB_outDataCore$D_IN =
	     pio_brams_2_memory$DOB ;
  assign pio_brams_2_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_pio_brams_2_serverAdapterB_outData_enqAndDeq ||
	     WILL_FIRE_RL_pio_brams_2_serverAdapterB_outData_enqOnly ;
  assign pio_brams_2_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_pio_brams_2_serverAdapterB_outData_enqAndDeq ||
	     WILL_FIRE_RL_pio_brams_2_serverAdapterB_outData_deqOnly ;
  assign pio_brams_2_serverAdapterB_outDataCore$CLR = 1'b0 ;

  // submodule pio_brams_3_memory
  assign pio_brams_3_memory$ADDRA = 18'h0 ;
  assign pio_brams_3_memory$ADDRB = pio_3_request_put[81:64] ;
  assign pio_brams_3_memory$DIA = 64'h0 ;
  assign pio_brams_3_memory$DIB = pio_3_request_put[63:0] ;
  assign pio_brams_3_memory$WEA = 1'b0 ;
  assign pio_brams_3_memory$WEB = pio_3_request_put[83] ;
  assign pio_brams_3_memory$ENA = 1'b0 ;
  assign pio_brams_3_memory$ENB = EN_pio_3_request_put ;

  // submodule pio_brams_3_serverAdapterA_outDataCore
  assign pio_brams_3_serverAdapterA_outDataCore$D_IN =
	     pio_brams_3_memory$DOA ;
  assign pio_brams_3_serverAdapterA_outDataCore$ENQ =
	     WILL_FIRE_RL_pio_brams_3_serverAdapterA_outData_enqOnly ;
  assign pio_brams_3_serverAdapterA_outDataCore$DEQ = 1'b0 ;
  assign pio_brams_3_serverAdapterA_outDataCore$CLR = 1'b0 ;

  // submodule pio_brams_3_serverAdapterB_outDataCore
  assign pio_brams_3_serverAdapterB_outDataCore$D_IN =
	     pio_brams_3_memory$DOB ;
  assign pio_brams_3_serverAdapterB_outDataCore$ENQ =
	     WILL_FIRE_RL_pio_brams_3_serverAdapterB_outData_enqAndDeq ||
	     WILL_FIRE_RL_pio_brams_3_serverAdapterB_outData_enqOnly ;
  assign pio_brams_3_serverAdapterB_outDataCore$DEQ =
	     WILL_FIRE_RL_pio_brams_3_serverAdapterB_outData_enqAndDeq ||
	     WILL_FIRE_RL_pio_brams_3_serverAdapterB_outData_deqOnly ;
  assign pio_brams_3_serverAdapterB_outDataCore$CLR = 1'b0 ;

  // remaining internal signals
  assign ab__h11841 = { pio_3_request_put[83], 1'd1 } ;
  assign ab__h2997 = { pio_0_request_put[83], 1'd1 } ;
  assign ab__h5945 = { pio_1_request_put[83], 1'd1 } ;
  assign ab__h8893 = { pio_2_request_put[83], 1'd1 } ;
  assign pio_brams_0_serverAdapterB_cnt_3_PLUS_IF_pio_b_ETC___d89 =
	     pio_brams_0_serverAdapterB_cnt +
	     (pio_brams_0_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_pio_0_response_get ? 3'd7 : 3'd0) ;
  assign pio_brams_1_serverAdapterB_cnt_97_PLUS_IF_pio__ETC___d203 =
	     pio_brams_1_serverAdapterB_cnt +
	     (pio_brams_1_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_pio_1_response_get ? 3'd7 : 3'd0) ;
  assign pio_brams_2_serverAdapterB_cnt_11_PLUS_IF_pio__ETC___d317 =
	     pio_brams_2_serverAdapterB_cnt +
	     (pio_brams_2_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_pio_2_response_get ? 3'd7 : 3'd0) ;
  assign pio_brams_3_serverAdapterB_cnt_25_PLUS_IF_pio__ETC___d431 =
	     pio_brams_3_serverAdapterB_cnt +
	     (pio_brams_3_serverAdapterB_cnt_1$whas ? 3'd1 : 3'd0) +
	     (EN_pio_3_response_get ? 3'd7 : 3'd0) ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        pio_brams_0_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	pio_brams_0_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	pio_brams_0_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	pio_brams_0_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	pio_brams_1_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	pio_brams_1_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	pio_brams_1_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	pio_brams_1_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	pio_brams_2_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	pio_brams_2_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	pio_brams_2_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	pio_brams_2_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	pio_brams_3_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	pio_brams_3_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	pio_brams_3_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	pio_brams_3_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
      end
    else
      begin
        if (pio_brams_0_serverAdapterA_cnt$EN)
	  pio_brams_0_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      pio_brams_0_serverAdapterA_cnt$D_IN;
	if (pio_brams_0_serverAdapterA_s1$EN)
	  pio_brams_0_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      pio_brams_0_serverAdapterA_s1$D_IN;
	if (pio_brams_0_serverAdapterB_cnt$EN)
	  pio_brams_0_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      pio_brams_0_serverAdapterB_cnt$D_IN;
	if (pio_brams_0_serverAdapterB_s1$EN)
	  pio_brams_0_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      pio_brams_0_serverAdapterB_s1$D_IN;
	if (pio_brams_1_serverAdapterA_cnt$EN)
	  pio_brams_1_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      pio_brams_1_serverAdapterA_cnt$D_IN;
	if (pio_brams_1_serverAdapterA_s1$EN)
	  pio_brams_1_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      pio_brams_1_serverAdapterA_s1$D_IN;
	if (pio_brams_1_serverAdapterB_cnt$EN)
	  pio_brams_1_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      pio_brams_1_serverAdapterB_cnt$D_IN;
	if (pio_brams_1_serverAdapterB_s1$EN)
	  pio_brams_1_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      pio_brams_1_serverAdapterB_s1$D_IN;
	if (pio_brams_2_serverAdapterA_cnt$EN)
	  pio_brams_2_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      pio_brams_2_serverAdapterA_cnt$D_IN;
	if (pio_brams_2_serverAdapterA_s1$EN)
	  pio_brams_2_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      pio_brams_2_serverAdapterA_s1$D_IN;
	if (pio_brams_2_serverAdapterB_cnt$EN)
	  pio_brams_2_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      pio_brams_2_serverAdapterB_cnt$D_IN;
	if (pio_brams_2_serverAdapterB_s1$EN)
	  pio_brams_2_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      pio_brams_2_serverAdapterB_s1$D_IN;
	if (pio_brams_3_serverAdapterA_cnt$EN)
	  pio_brams_3_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      pio_brams_3_serverAdapterA_cnt$D_IN;
	if (pio_brams_3_serverAdapterA_s1$EN)
	  pio_brams_3_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      pio_brams_3_serverAdapterA_s1$D_IN;
	if (pio_brams_3_serverAdapterB_cnt$EN)
	  pio_brams_3_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      pio_brams_3_serverAdapterB_cnt$D_IN;
	if (pio_brams_3_serverAdapterB_s1$EN)
	  pio_brams_3_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      pio_brams_3_serverAdapterB_s1$D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    pio_brams_0_serverAdapterA_cnt = 3'h2;
    pio_brams_0_serverAdapterA_s1 = 2'h2;
    pio_brams_0_serverAdapterB_cnt = 3'h2;
    pio_brams_0_serverAdapterB_s1 = 2'h2;
    pio_brams_1_serverAdapterA_cnt = 3'h2;
    pio_brams_1_serverAdapterA_s1 = 2'h2;
    pio_brams_1_serverAdapterB_cnt = 3'h2;
    pio_brams_1_serverAdapterB_s1 = 2'h2;
    pio_brams_2_serverAdapterA_cnt = 3'h2;
    pio_brams_2_serverAdapterA_s1 = 2'h2;
    pio_brams_2_serverAdapterB_cnt = 3'h2;
    pio_brams_2_serverAdapterB_s1 = 2'h2;
    pio_brams_3_serverAdapterA_cnt = 3'h2;
    pio_brams_3_serverAdapterA_s1 = 2'h2;
    pio_brams_3_serverAdapterB_cnt = 3'h2;
    pio_brams_3_serverAdapterB_s1 = 2'h2;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_pio_brams_0_serverAdapterA_overRun)
	$display("ERROR: %m: mkBRAMSeverAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_pio_brams_0_serverAdapterB_overRun)
	$display("ERROR: %m: mkBRAMSeverAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_pio_brams_1_serverAdapterA_overRun)
	$display("ERROR: %m: mkBRAMSeverAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_pio_brams_1_serverAdapterB_overRun)
	$display("ERROR: %m: mkBRAMSeverAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_pio_brams_2_serverAdapterA_overRun)
	$display("ERROR: %m: mkBRAMSeverAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_pio_brams_2_serverAdapterB_overRun)
	$display("ERROR: %m: mkBRAMSeverAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_pio_brams_3_serverAdapterA_overRun)
	$display("ERROR: %m: mkBRAMSeverAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_pio_brams_3_serverAdapterB_overRun)
	$display("ERROR: %m: mkBRAMSeverAdapter overrun");
  end
  // synopsys translate_on
endmodule  // mkWCFIFOx4

